{
  "version": 1,
  "minor_version": 1,
  "key": "lovelace",
  "data": {
    "config": {
      "title": "Smart Nest",
      "background": "var(--background-image)",
      "views": [
        {
          "title": "Overview",
          "path": "overview",
          "icon": "mdi:home-assistant",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Status",
                  "heading_style": "subtitle",
                  "icon": "mdi:home-assistant",
                  "badges": [
                    {
                      "type": "entity",
                      "entity": "sensor.texts",
                      "name": "Guide",
                      "state_content": "name",
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/guide"
                      },
                      "icon": "mdi:text-box"
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "screen",
                      "media_query": "(min-width: 0px) and (max-width: 767px)"
                    }
                  ]
                },
                {
                  "type": "heading",
                  "heading": "Status",
                  "heading_style": "subtitle",
                  "icon": "mdi:home-assistant",
                  "visibility": [
                    {
                      "condition": "screen",
                      "media_query": "(min-width: 768px)"
                    }
                  ]
                },
                {
                  "type": "tile",
                  "name": "WARNING: Dog water bowl is empty",
                  "state_content": "last_changed",
                  "icon": "mdi:cup-water",
                  "color": "color-mix(in srgb, var(--color-mix-in-base), red)",
                  "layout_options": {
                    "grid_columns": 4
                  },
                  "visibility": [
                    {
                      "condition": "state",
                      "entity": "binary_sensor.dog_water_bowl",
                      "state_not": "on"
                    }
                  ],
                  "entity": "binary_sensor.dog_water_bowl",
                  "features_position": "bottom",
                  "vertical": false,
                  "card_mod": {
                    "style": {
                      "ha-tile-icon$": ":host {\n  --tile-icon-color: color-mix(in srgb, var(--color-mix-in-base), red) !important;\n}\n",
                      "ha-tile-info$": "state-display {\n  opacity: 0.7;\n} state-display::before {\n  content: 'Since';\n}\n"
                    }
                  }
                },
                {
                  "type": "tile",
                  "entity": "binary_sensor.internet",
                  "name": "WARNING: Internet is disconnected",
                  "state_content": "last_changed",
                  "icon": "mdi:close-network",
                  "color": "color-mix(in srgb, var(--color-mix-in-base), red)",
                  "layout_options": {
                    "grid_columns": 4
                  },
                  "visibility": [
                    {
                      "condition": "state",
                      "entity": "binary_sensor.internet",
                      "state_not": "on"
                    }
                  ],
                  "features_position": "bottom",
                  "vertical": false,
                  "card_mod": {
                    "style": {
                      "ha-tile-icon$": ":host {\n  --tile-icon-color: color-mix(in srgb, var(--color-mix-in-base), red) !important;\n}\n",
                      "ha-tile-info$": "state-display {\n  opacity: 0.7;\n} state-display::before {\n  content: 'System functionality limited since';\n}\n"
                    }
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "sensor.device_issues",
                  "card_layout": "large-2-rows",
                  "tap_action": {
                    "action": "navigate",
                    "navigation_path": "#device-issues"
                  },
                  "double_tap_action": {
                    "action": "navigate",
                    "navigation_path": "#device-issues"
                  },
                  "hold_action": {
                    "action": "navigate",
                    "navigation_path": "#device-issues"
                  },
                  "button_action": {
                    "tap_action": {
                      "action": "navigate",
                      "navigation_path": "#device-issues"
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "sensor.unavailable_entities",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.frozen_entities",
                      "show_state": true,
                      "show_background": false
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "numeric_state",
                      "entity": "sensor.device_issues",
                      "above": 0
                    }
                  ],
                  "styles": "${card.querySelector('.bubble-name').innerText = 'WARNING: ' + hass.states['sensor.device_issues'].state + ' device issue' + (hass.states['sensor.device_issues'].state === '1' ? '': 's')}}\n${card.querySelector('.bubble-state').innerText = 'System functionality may be impaired'}\n${card.querySelector('.bubble-sub-button-1 .bubble-sub-button-name-container').innerText = hass.states['sensor.unavailable_entities'].state + ' unavailable' }\n${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = hass.states['sensor.frozen_entities'].state + ' frozen' }\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "icon_color_mix_in"
                  ],
                  "icon_color_mix_in": {
                    "color": "red"
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "sensor.system_issues_in_the_last_hour",
                  "card_layout": "large-2-rows",
                  "sub_button": [
                    {
                      "entity": "sensor.errors_in_the_last_hour",
                      "show_state": true,
                      "show_background": false,
                      "icon": "mdi:alert-circle"
                    },
                    {
                      "entity": "sensor.warnings_in_the_last_hour",
                      "show_state": true,
                      "show_background": false,
                      "icon": "mdi:help-circle"
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "numeric_state",
                      "entity": "sensor.errors_in_the_last_hour",
                      "above": 0
                    }
                  ],
                  "styles": "${card.querySelector('.bubble-name').innerText = 'WARNING: ' + hass.states['sensor.system_issues_in_the_last_hour'].state + ' system issue' + (hass.states['sensor.system_issues_in_the_last_hour'].state === '1' ? '': 's') + ' this hour'}\n${card.querySelector('.bubble-state').innerText = 'System functionality may be impaired'}\n${card.querySelector('.bubble-sub-button-1 .bubble-sub-button-name-container').innerText = parseInt(hass.states['sensor.errors_in_the_last_hour'].state) + ' error' + (hass.states['counter.errors'].state === '1.0' ? '': 's')}\n${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = parseInt(hass.states['sensor.warnings_in_the_last_hour'].state) + ' warning' + (hass.states['counter.warnings'].state === '1.0' ? '': 's') }\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "icon_color_mix_in"
                  ],
                  "icon_color_mix_in": {
                    "color": "red"
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "name": "High power cost",
                  "entity": "sensor.electricity_general_price",
                  "icon": "mdi:lightning-bolt",
                  "card_layout": "large-2-rows",
                  "tap_action": {
                    "action": "navigate",
                    "navigation_path": "/lovelace/electricity"
                  },
                  "button_action": {
                    "tap_action": {
                      "action": "navigate",
                      "navigation_path": "/lovelace/electricity"
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "sensor.total_energy_cost_monthly",
                      "show_state": true,
                      "show_background": false,
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/electricity"
                      }
                    },
                    {
                      "entity": "sensor.total_energy_cost_savings_monthly",
                      "show_state": true,
                      "show_background": false,
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/electricity"
                      }
                    },
                    {
                      "entity": "sensor.total_power_cost",
                      "show_state": true,
                      "show_background": false,
                      "visibility": [
                        {
                          "condition": "numeric_state",
                          "entity": "sensor.total_power_cost",
                          "above": 0.3
                        }
                      ]
                    },
                    {
                      "entity": "sensor.total_power_cost_savings",
                      "show_state": true,
                      "show_background": false,
                      "visibility": [
                        {
                          "condition": "numeric_state",
                          "entity": "sensor.total_power_cost",
                          "below": 0.3
                        }
                      ]
                    },
                    {
                      "entity": "sensor.battery_time_remaining",
                      "show_state": true,
                      "show_background": false
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "numeric_state",
                      "entity": "sensor.electricity_general_price",
                      "above": 0.4
                    }
                  ],
                  "styles": ".bubble-sub-button-3 {\n  color: color-mix(in srgb, var(--color-mix-in-base), red)\n} .bubble-sub-button-4 {\n  color: color-mix(in srgb, var(--color-mix-in-base), green)\n}\n${card.querySelector('.bubble-state').innerText = 'Minimise usage'}\n${card.querySelector('.bubble-sub-button-1 .bubble-sub-button-name-container').innerText = parseInt(hass.states['sensor.total_energy_cost_yearly'].state) + '/y spent'}\n${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = parseInt(hass.states['sensor.total_energy_cost_savings_yearly'].state) + '/y saved'}\n${card.querySelector('.bubble-sub-button-3 .bubble-sub-button-name-container').innerText = parseFloat(hass.states['sensor.total_power_cost'].state).toFixed(2) + '/h now'}\n${card.querySelector('.bubble-sub-button-4 .bubble-sub-button-name-container').innerText =  parseFloat(hass.states['sensor.total_power_cost_savings'].state).toFixed(2) + '/h saving'}\n${card.querySelector('.bubble-sub-button-5 .bubble-sub-button-name-container').innerText = (parseFloat(hass.states['sensor.battery_time_remaining'].state) >= 1 ? parseFloat(hass.states['sensor.battery_time_remaining'].state).toFixed(0) + 'h' : Math.round(parseFloat(hass.states['sensor.battery_time_remaining'].state) * 60) + 'm')\n + ' battery left'}\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "icon_color_mix_in"
                  ],
                  "icon_color_mix_in": {
                    "color": "var(--amber-color)"
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "select",
                  "entity": "input_select.scene",
                  "show_last_changed": true,
                  "sub_button": [
                    {
                      "entity": "input_boolean.pets_home_alone",
                      "show_name": true
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "state",
                      "entity": "input_select.scene",
                      "state": [
                        "Away (Day)",
                        "Away (Night)"
                      ]
                    }
                  ],
                  "styles": ".bubble-state::before {\n  content: \"Since \";\n  white-space: pre;\n}\n${card.querySelector('.bubble-sub-button-name-container').innerText = (hass.states['input_boolean.pets_home_alone'].state === 'on' ? 'Pets home alone' : 'Pets not detected')}",
                  "modules": [
                    "scene_state_text_and_icon"
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "select",
                  "entity": "input_select.scene",
                  "show_last_changed": true,
                  "sub_button": [
                    {
                      "entity": "input_boolean.napping_in_bedroom",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "toggle"
                      }
                    },
                    {
                      "entity": "input_boolean.napping_in_nursery",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "toggle"
                      }
                    }
                  ],
                  "card_layout": "large-2-rows",
                  "visibility": [
                    {
                      "condition": "state",
                      "entity": "input_select.scene",
                      "state_not": [
                        "Away (Day)",
                        "Away (Night)"
                      ]
                    }
                  ],
                  "styles": ".bubble-state::before {\n  content: \"Since \";\n  white-space: pre;\n} .bubble-sub-button-icon {\n  --mdc-icon-size: 16px !important;\n} .bubble-sub-button {\n  white-space: pre;\n} .bubble-sub-button-1 .bubble-sub-button-name-container::before {\n  content: \" ${hass.states['input_boolean.napping_in_bedroom'].state === 'on' ? 'Napping' : 'Not napping'}\";\n} .bubble-sub-button-2 .bubble-sub-button-name-container::before {\n  content: \" ${hass.states['input_boolean.napping_in_nursery'].state === 'on' ? 'Napping' : 'Not napping'}\";\n}\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "scene_state_text_and_icon"
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "lock.door_lock",
                  "show_state": false,
                  "show_last_changed": true,
                  "name": "Front door",
                  "card_layout": "large-2-rows",
                  "button_action": {
                    "double_tap_action": {
                      "action": "toggle"
                    },
                    "hold_action": {
                      "action": "toggle"
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "sensor.security_monitoring",
                      "show_state": true,
                      "show_background": false,
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/presence"
                      },
                      "double_tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/presence"
                      },
                      "hold_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/presence"
                      }
                    },
                    {
                      "entity": "sensor.security_monitoring",
                      "show_attribute": true,
                      "attribute": "count_text",
                      "show_background": false,
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/presence"
                      },
                      "double_tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/presence"
                      },
                      "hold_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/presence"
                      },
                      "visibility": [
                        {
                          "condition": "state",
                          "entity": "sensor.security_monitoring",
                          "state_not": "off"
                        }
                      ]
                    }
                  ],
                  "styles": ".bubble-icon-container {\n  background: ${hass.states['lock.door_lock'].state == 'locked' ? 'var(--bubble-accent-color)' : 'var(--bubble-sub-button-background-color)' } !important;\n} .bubble-icon-container::before {\n  background: var(--disabled-color) !important;\n} .bubble-main-icon {\n  color: var(--button-color) !important;\n} .bubble-name::after {\n  content: ' ${state}' !important;\n  white-space: pre;\n} .bubble-state::before {\n  content: \"Since \";\n  white-space: pre;\n} .bubble-sub-button-1 .bubble-sub-button-name-container {\n  text-transform: lowercase;\n} .bubble-sub-button-1 .bubble-sub-button-name-container::before {\n  content: 'Monitoring ' !important;\n  white-space: pre;\n  text-transform: none;\n}\n",
                  "modules": [
                    "normalised_sub_button_size"
                  ]
                },
                {
                  "type": "map",
                  "entities": [
                    {
                      "entity": "person.dan"
                    },
                    {
                      "entity": "person.rachel"
                    }
                  ],
                  "hours_to_show": 1,
                  "layout_options": {
                    "grid_columns": 4,
                    "grid_rows": 2
                  },
                  "visibility": [
                    {
                      "condition": "or",
                      "conditions": [
                        {
                          "condition": "and",
                          "conditions": [
                            {
                              "condition": "user",
                              "users": [
                                "15ff7a86d4ae4d38a60003ad4064ff78"
                              ]
                            },
                            {
                              "condition": "state",
                              "entity": "person.rachel",
                              "state_not": "home"
                            }
                          ]
                        },
                        {
                          "condition": "and",
                          "conditions": [
                            {
                              "condition": "user",
                              "users": [
                                "9a175674be354863afb9634adc4b8980"
                              ]
                            },
                            {
                              "condition": "state",
                              "entity": "person.dan",
                              "state_not": "home"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "theme_mode": "auto",
                  "card_mod": {
                    "style": {
                      ".": "ha-card {\n  background: transparent;\n}\n",
                      "ha-map$": "#map {\n  background: transparent;\n} .leaflet-tile-pane {\n  opacity: 0.5;\n} .leaflet-control-container {\n  opacity: 0.75;\n} .leaflet-control-attribution {\n  opacity: 0.1;\n}\n"
                    }
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "select.washer",
                  "icon": "mdi:washing-machine",
                  "name": "Washing",
                  "styles": ".bubble-icon {\n  color: ${state === \"run\" ? \"color-mix(in srgb, var(--color-mix-in-base), blue)\" : \"var(--light-primary-color)\"} !important;\n} .bubble-name::after {\n  content: ' ${state === \"stop\" ? \"done\" : (state === \"paused\" ? \"\" : \"\")}';\n  white-space: pre;\n} .bubble-state::before {\n  content: 'Finish${state === \"run\" ? \"ing\" : \"ed\"} ';\n  white-space: pre;\n}\n",
                  "modules": [
                    "icon_border_progress",
                    "datetime_to_relative_time"
                  ],
                  "icon_border_progress": [
                    {
                      "button": "main",
                      "source": "sensor.washer_completion_percentage",
                      "condition": [
                        {
                          "condition": "numeric_state",
                          "entity_id": "sensor.washer_completion_percentage",
                          "above": 0
                        }
                      ],
                      "color_stops": {
                        "0": {
                          "color": "rgb(234, 174, 101)",
                          "percent": 25
                        },
                        "1": {
                          "color": "rgb(101, 157, 234)",
                          "percent": 75
                        }
                      },
                      "interpolate_colors": true
                    }
                  ],
                  "datetime_to_relative_time": {
                    "entity": "sensor.washer_completion_time"
                  },
                  "grid_options": {
                    "columns": 6
                  },
                  "visibility": [
                    {
                      "condition": "state",
                      "entity": "binary_sensor.washer_or_dryer_run_today",
                      "state_not": "off"
                    }
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "select.dryer",
                  "icon": "mdi:tumble-dryer",
                  "name": "Drying",
                  "styles": ".bubble-icon {\n  color: ${state === \"run\" ? \"color-mix(in srgb, var(--color-mix-in-base), var(--orange-color))\" : \"var(--light-primary-color)\"} !important;\n} .bubble-name::after {\n  content: ' ${state === \"stop\" ? \"done\" : (state === \"paused\" ? \"\" : \"\")}';\n  white-space: pre;\n} .bubble-state::before {\n  content: 'Finish${state === \"run\" ? \"ing\" : \"ed\"} ';\n  white-space: pre;\n}\n",
                  "icon_border_progress": [
                    {
                      "button": "main",
                      "source": "sensor.dryer_completion_percentage",
                      "condition": [
                        {
                          "condition": "numeric_state",
                          "entity_id": "sensor.dryer_completion_percentage",
                          "above": 0
                        }
                      ],
                      "color_stops": {
                        "0": {
                          "color": "rgb(101, 157, 234)",
                          "percent": 25
                        },
                        "1": {
                          "color": "rgb(234, 207, 101)",
                          "percent": 75
                        }
                      },
                      "interpolate_colors": true
                    }
                  ],
                  "datetime_to_relative_time": {
                    "entity": "sensor.dryer_completion_time"
                  },
                  "modules": [
                    "icon_border_progress",
                    "datetime_to_relative_time"
                  ],
                  "grid_options": {
                    "columns": 6
                  },
                  "visibility": [
                    {
                      "condition": "state",
                      "entity": "binary_sensor.washer_or_dryer_run_today",
                      "state_not": "off"
                    }
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "binary_sensor.plants_need_watering",
                  "show_state": false,
                  "card_layout": "large-2-rows",
                  "tap_action": {
                    "action": "navigate",
                    "navigation_path": "/lovelace/plants"
                  },
                  "double_tap_action": {
                    "action": "navigate",
                    "navigation_path": "/lovelace/plants"
                  },
                  "hold_action": {
                    "action": "navigate",
                    "navigation_path": "/lovelace/plants"
                  },
                  "button_action": {
                    "tap_action": {
                      "action": "navigate",
                      "navigation_path": "/lovelace/plants"
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "sensor.dry_plants",
                      "show_background": false,
                      "show_attribute": true,
                      "attribute": "text"
                    },
                    {
                      "entity": "sensor.plants_last_watered",
                      "show_background": false,
                      "show_state": true
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "state",
                      "entity": "binary_sensor.plants_need_watering",
                      "state": "on"
                    }
                  ],
                  "modules": [
                    "normalised_sub_button_size",
                    "icon_color_mix_in"
                  ],
                  "icon_color_mix_in": {
                    "color": "blue"
                  },
                  "styles": "${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = \"watered \" + (() => {\n  const rtf = new Intl.RelativeTimeFormat('en', { numeric: 'auto' });\n  const seconds = Math.round((new Date() - new Date(hass.states['sensor.plants_last_watered'].state)) / 1000);\n  if (Math.abs(seconds) < 60) return rtf.format(-seconds, 'second');\n  const minutes = Math.round(seconds / 60);\n  if (Math.abs(minutes) < 60) return rtf.format(-minutes, 'minute');\n  const hours = Math.round(minutes / 60);\n  if (Math.abs(hours) < 24) return rtf.format(-hours, 'hour');\n  return rtf.format(-Math.round(hours / 24), 'day');\n})()}\n"
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "sensor.low_batteries",
                  "card_layout": "large-2-rows",
                  "tap_action": {
                    "action": "navigate",
                    "navigation_path": "#low-batteries"
                  },
                  "double_tap_action": {
                    "action": "navigate",
                    "navigation_path": "#low-batteries"
                  },
                  "hold_action": {
                    "action": "navigate",
                    "navigation_path": "#low-batteries"
                  },
                  "button_action": {
                    "tap_action": {
                      "action": "navigate",
                      "navigation_path": "#low-batteries"
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "sensor.low_batteries",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.low_batteries",
                      "show_state": false,
                      "show_background": false,
                      "show_attribute": true,
                      "attribute": "unavailable",
                      "icon": "mdi:battery-unknown"
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "numeric_state",
                      "entity": "sensor.low_batteries",
                      "above": 0
                    }
                  ],
                  "styles": "${card.querySelector('.bubble-name').innerText = 'WARNING: ' + hass.states['sensor.low_batteries'].state + ' low batter' + (hass.states['sensor.low_batteries'].state === '1' ? 'y': 'ies') }\n${card.querySelector('.bubble-state').innerText = 'Please check, charge, or replace'}\n${card.querySelector('.bubble-sub-button-1 .bubble-sub-button-name-container').innerText = hass.states['sensor.low_batteries'].state + ' below 25%' }\n${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = hass.states['sensor.low_batteries'].attributes['unavailable'] + ' unavailable' }\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "icon_color_mix_in"
                  ],
                  "icon_color_mix_in": {
                    "color": "red"
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "entity": "sensor.charging_batteries",
                  "show_state": false,
                  "card_layout": "large-2-rows",
                  "tap_action": {
                    "action": "navigate",
                    "navigation_path": "#charging-batteries"
                  },
                  "double_tap_action": {
                    "action": "navigate",
                    "navigation_path": "#charging-batteries"
                  },
                  "hold_action": {
                    "action": "navigate",
                    "navigation_path": "#charging-batteries"
                  },
                  "button_action": {
                    "tap_action": {
                      "action": "navigate",
                      "navigation_path": "#charging-batteries"
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "sensor.charging_batteries",
                      "show_state": false,
                      "show_attribute": true,
                      "show_background": false,
                      "attribute": "charged",
                      "icon": "mdi:battery"
                    },
                    {
                      "entity": "sensor.charging_batteries",
                      "show_state": false,
                      "show_attribute": true,
                      "show_background": false,
                      "attribute": "above_50",
                      "icon": "mdi:battery-50"
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "numeric_state",
                      "entity": "sensor.charged_batteries",
                      "above": 0
                    }
                  ],
                  "styles": "${card.querySelector('.bubble-name').innerText =  hass.states['sensor.charging_batteries'].state + ' batter' + (hass.states['sensor.charging_batteries'].state === '1' ? 'y': 'ies') + ' charging' }\n${card.querySelector('.bubble-sub-button-1 .bubble-sub-button-name-container').innerText = hass.states['sensor.charging_batteries'].attributes['above_90'] + ' above 90%' }\n${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = hass.states['sensor.charging_batteries'].attributes['above_50'] + ' above 50%' }\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "icon_color_mix_in"
                  ],
                  "icon_color_mix_in": {
                    "color": "yellow"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Lights",
                  "heading_style": "subtitle",
                  "icon": "mdi:lightbulb-variant"
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "name",
                  "card_layout": "large-2-rows",
                  "sub_button": [
                    {
                      "entity": "group.all_lights",
                      "name": "All",
                      "show_name": true,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "script.toggle_group",
                        "data": {
                          "group": "group.all_light_control"
                        }
                      }
                    },
                    {
                      "entity": "light.hall",
                      "name": "Hall",
                      "show_name": true,
                      "light_background": false,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_hall_light"
                        }
                      }
                    },
                    {
                      "entity": "group.entryway_lights",
                      "name": "Entryway",
                      "show_name": true,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_entryway_lights"
                        }
                      }
                    },
                    {
                      "entity": "light.bathroom",
                      "name": "Bathroom",
                      "show_name": true,
                      "light_background": false,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_bathroom_light"
                        }
                      }
                    },
                    {
                      "entity": "group.kitchen_lights",
                      "name": "Kitchen",
                      "show_name": true,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "script.toggle_group",
                        "data": {
                          "group": "group.all_kitchen_light_control"
                        }
                      }
                    },
                    {
                      "entity": "light.bedroom",
                      "name": "Bedroom",
                      "show_name": true,
                      "light_background": false,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_bedroom_light"
                        }
                      }
                    },
                    {
                      "entity": "group.tv_lights",
                      "name": "TV",
                      "show_name": true,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_tv_lights"
                        }
                      }
                    },
                    {
                      "entity": "light.nursery",
                      "name": "Nursery",
                      "show_name": true,
                      "light_background": false,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_nursery_light"
                        }
                      }
                    },
                    {
                      "entity": "group.dining_room_lights",
                      "name": "Dining",
                      "show_name": true,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_dining_room_lights"
                        }
                      }
                    },
                    {
                      "entity": "light.office",
                      "name": "Office",
                      "show_name": true,
                      "light_background": false,
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_office_light"
                        }
                      }
                    }
                  ],
                  "styles": ".bubble-name-container {\n  max-width: 0px !important;\n} .bubble-icon-container {\n  display: none;\n} .bubble-sub-button-container {\n  margin: auto !important;\n  padding: 0 !important;\n} .bubble-sub-button-1 {\n  border: ${hass.states['group.all_light_control'].state == 'on' ? 'var(--button-border-auto)' : (hass.states['group.any_light_control'].state == 'on' ? 'var(--button-border-semi)' : 'none')} !important;\n} .bubble-sub-button-2 {\n  border: ${control = hass.states['input_boolean.control_hall_light'].state == 'on', control && (hass.states['input_boolean.napping_in_nursery'].state == 'on' || hass.states['input_boolean.napping_in_bedroom'].state == 'on') ? 'var(--button-border-manual)' : (control ? 'var(--button-border-auto)' : 'none')} !important;\n} .bubble-sub-button-3 {\n  border: ${hass.states['input_boolean.control_entryway_lights'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-4 {\n  border: ${hass.states['input_boolean.control_bathroom_light'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-5 {\n  border: ${hass.states['group.all_kitchen_light_control'].state == 'on' ? 'var(--button-border-auto)' : hass.states['input_boolean.control_kitchen_light'].state == 'on' || hass.states['input_boolean.control_kitchen_strip_light'].state == 'on' ? 'var(--button-border-semi)' : 'none'} !important;\n} .bubble-sub-button-6 {\n  border: ${control = hass.states['input_boolean.control_bedroom_light'].state == 'on', control && hass.states['input_boolean.napping_in_bedroom'].state == 'on' ? 'var(--button-border-manual)' : (control ? 'var(--button-border-auto)' : 'none')} !important;\n} .bubble-sub-button-7 {\n  border: ${hass.states['input_boolean.control_tv_lights'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-8 {\n  border: ${control = hass.states['input_boolean.control_nursery_light'].state == 'on', control && hass.states['input_boolean.napping_in_nursery'].state == 'on' ? 'var(--button-border-manual)' : (control ? 'var(--button-border-auto)' : 'none')} !important;\n} .bubble-sub-button-9 {\n  border: ${hass.states['input_boolean.control_dining_room_lights'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-10 {\n  border: ${hass.states['input_boolean.control_office_light'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n}\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "colorise_entities",
                    "indicate_unavailable_entities"
                  ]
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Climate",
                  "heading_style": "subtitle",
                  "icon": "mdi:thermometer"
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "name": "WARNING: Aircon filters need cleaning",
                  "button_type": "state",
                  "entity": "group.all_aircon",
                  "icon": "mdi:air-filter",
                  "sub_button": [
                    {
                      "entity": "binary_sensor.living_room_aircon_filter_clean_required",
                      "icon": "mdi:sofa",
                      "tap_action": {
                        "action": "call-service",
                        "service": "button.press",
                        "target": {
                          "entity_id": "button.living_room_aircon_reset_filter"
                        }
                      }
                    },
                    {
                      "entity": "binary_sensor.dining_room_aircon_filter_clean_required",
                      "icon": "mdi:table-chair",
                      "tap_action": {
                        "action": "call-service",
                        "service": "button.press",
                        "target": {
                          "entity_id": "button.dining_room_aircon_reset_filter"
                        }
                      }
                    },
                    {
                      "entity": "binary_sensor.bedroom_aircon_filter_clean_required",
                      "icon": "mdi:bed",
                      "tap_action": {
                        "action": "call-service",
                        "service": "button.press",
                        "target": {
                          "entity_id": "button.bedroom_aircon_reset_filter"
                        }
                      }
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "or",
                      "conditions": [
                        {
                          "condition": "state",
                          "entity": "binary_sensor.living_room_aircon_filter_clean_required",
                          "state": "on"
                        },
                        {
                          "condition": "state",
                          "entity": "binary_sensor.dining_room_aircon_filter_clean_required",
                          "state": "on"
                        },
                        {
                          "condition": "state",
                          "entity": "binary_sensor.bedroom_room_aircon_filter_clean_required",
                          "state": "on"
                        }
                      ]
                    }
                  ],
                  "styles": "${card.querySelector('.bubble-state').innerText = 'Press button after cleaning ➔' }\n",
                  "modules": [
                    "icon_color_mix_in"
                  ],
                  "icon_color_mix_in": {
                    "color": "red"
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "name": "Aircon",
                  "button_type": "state",
                  "entity": "group.any_aircon",
                  "show_state": false,
                  "card_layout": "large-2-rows",
                  "hold_action": {
                    "action": "call-service",
                    "service": "script.toggle_group",
                    "data": {
                      "group": "group.all_aircon_control"
                    }
                  },
                  "button_action": {
                    "double_tap_action": {
                      "action": "toggle"
                    },
                    "hold_action": {
                      "action": "call-service",
                      "service": "script.toggle_group",
                      "data": {
                        "group": "group.all_aircon_control"
                      }
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "climate.living_room_aircon",
                      "icon": "mdi:sofa",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_living_room_aircon"
                        }
                      }
                    },
                    {
                      "entity": "climate.dining_room_aircon",
                      "icon": "mdi:table-chair",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_dining_room_aircon"
                        }
                      }
                    },
                    {
                      "entity": "climate.bedroom_aircon",
                      "icon": "mdi:bed",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_bedroom_aircon"
                        }
                      }
                    }
                  ],
                  "grid_options": {
                    "columns": 6
                  },
                  "styles": ".bubble-icon-container {\n  border: ${hass.states['group.all_aircon_control'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n  box-sizing: border-box !important;\n} .bubble-icon-container::before {\n  background: var(--disabled-color) !important;\n} .bubble-sub-button-icon {\n  --mdc-icon-size: 16px !important;\n} .bubble-sub-button-1 {\n  border: ${hass.states['input_boolean.control_living_room_aircon'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-2 {\n  border: ${hass.states['input_boolean.control_dining_room_aircon'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-3 {\n  border: ${hass.states['input_boolean.control_bedroom_aircon'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n}\n",
                  "modules": [
                    "colorise_entities",
                    "indicate_unavailable_entities"
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "name": "Fans",
                  "button_type": "state",
                  "entity": "group.any_fans",
                  "show_state": false,
                  "card_layout": "large-2-rows",
                  "hold_action": {
                    "action": "call-service",
                    "service": "script.toggle_group",
                    "data": {
                      "group": "group.all_fan_control"
                    }
                  },
                  "button_action": {
                    "double_tap_action": {
                      "action": "toggle"
                    },
                    "hold_action": {
                      "action": "call-service",
                      "service": "script.toggle_group",
                      "data": {
                        "group": "group.all_fan_control"
                      }
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "fan.bedroom",
                      "icon": "mdi:bed",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_bedroom_fan"
                        }
                      }
                    },
                    {
                      "entity": "fan.nursery",
                      "icon": "mdi:cradle",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_nursery_fan"
                        }
                      }
                    },
                    {
                      "entity": "fan.office",
                      "icon": "mdi:desktop-classic",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_office_fan"
                        }
                      }
                    }
                  ],
                  "grid_options": {
                    "columns": 6
                  },
                  "styles": ".bubble-icon-container {\n  border: ${hass.states['group.all_fan_control'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n  box-sizing: border-box !important;\n} .bubble-icon-container::before {\n  background: var(--disabled-color) !important;\n} .bubble-sub-button-icon {\n  --mdc-icon-size: 16px !important;\n} .bubble-sub-button-1 {\n  border: ${hass.states['input_boolean.control_bedroom_fan'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-2 {\n  border: ${hass.states['input_boolean.control_nursery_fan'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-3 {\n  border: ${hass.states['input_boolean.control_office_fan'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n}\n",
                  "modules": [
                    "colorise_entities",
                    "indicate_unavailable_entities"
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "name": "Heaters",
                  "button_type": "state",
                  "entity": "group.any_heaters",
                  "show_state": false,
                  "card_layout": "large-2-rows",
                  "hold_action": {
                    "action": "call-service",
                    "service": "script.toggle_group",
                    "data": {
                      "group": "group.all_heater_control"
                    }
                  },
                  "button_action": {
                    "double_tap_action": {
                      "action": "toggle"
                    },
                    "hold_action": {
                      "action": "call-service",
                      "service": "script.toggle_group",
                      "data": {
                        "group": "group.all_heater_control"
                      }
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "climate.nursery_heater",
                      "icon": "mdi:cradle",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_nursery_heater"
                        }
                      }
                    },
                    {
                      "entity": "switch.office_heater",
                      "icon": "mdi:desktop-classic",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_office_heater"
                        }
                      }
                    }
                  ],
                  "grid_options": {
                    "columns": 6
                  },
                  "styles": ".bubble-icon-container {\n  border: ${hass.states['group.all_heater_control'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n  box-sizing: border-box !important;\n} .bubble-icon-container::before {\n  background: var(--disabled-color) !important;\n} .bubble-sub-button-icon {\n  --mdc-icon-size: 16px !important;\n} .bubble-sub-button-1 {\n  border: ${hass.states['input_boolean.control_nursery_heater'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n} .bubble-sub-button-2 {\n  border: ${hass.states['input_boolean.control_office_heater'].state == 'on' ? 'var(--button-border-auto)' : 'none'} !important;\n}\n",
                  "modules": [
                    "colorise_entities",
                    "indicate_unavailable_entities"
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "name": "Humidifiers",
                  "button_type": "state",
                  "entity": "group.any_humidifiers",
                  "show_state": false,
                  "card_layout": "large-2-rows",
                  "hold_action": {
                    "action": "call-service",
                    "service": "script.toggle_group",
                    "data": {
                      "group": "group.all_humidifier_control"
                    }
                  },
                  "button_action": {
                    "double_tap_action": {
                      "action": "toggle"
                    },
                    "hold_action": {
                      "action": "call-service",
                      "service": "script.toggle_group",
                      "data": {
                        "group": "group.all_humidifier_control"
                      }
                    }
                  },
                  "sub_button": [
                    {
                      "entity": "humidifier.bedroom",
                      "icon": "mdi:bed",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_bedroom_humidifier"
                        }
                      }
                    },
                    {
                      "entity": "humidifier.nursery",
                      "icon": "mdi:cradle",
                      "double_tap_action": {
                        "action": "toggle"
                      },
                      "hold_action": {
                        "action": "call-service",
                        "service": "input_boolean.toggle",
                        "target": {
                          "entity_id": "input_boolean.control_nursery_humidifier"
                        }
                      }
                    }
                  ],
                  "grid_options": {
                    "columns": 6
                  },
                  "styles": ".bubble-icon-container {\n  border: ${hass.states['sensor.humidifiers_status_text'].state !== 'Functional' ? 'var(--button-border-error)' : (hass.states['group.all_humidifier_control'].state == 'on' ? 'var(--button-border-auto)' : 'none')} !important;\n  box-sizing: border-box !important;\n} .bubble-icon-container::before {\n  background: var(--disabled-color) !important;\n} .bubble-sub-button-icon {\n  --mdc-icon-size: 16px !important;\n} .bubble-sub-button-1 {\n  border: ${hass.states['sensor.bedroom_humidifier_faults'].state !== 'no faults' ? 'var(--button-border-error)' : (hass.states['input_boolean.control_bedroom_humidifier'].state === 'on' ? 'var(--button-border-auto)' : 'none')} !important;\n} .bubble-sub-button-2 {\n  border: ${hass.states['sensor.nursery_humidifier_faults'].state !== 'no faults' ? 'var(--button-border-error)' : (hass.states['input_boolean.control_nursery_humidifier'].state === 'on' ? 'var(--button-border-auto)' : 'none')} !important;\n}\n${card.querySelector('.bubble-state').innerText = hass.states['sensor.humidifiers_status_text'].state !== \"Functional\" ? hass.states['sensor.humidifiers_status_text'].state : \"\" }\n",
                  "modules": [
                    "colorise_entities",
                    "indicate_unavailable_entities"
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "name": "Outside",
                  "entity": "sensor.outside_apparent_temperature",
                  "tap_action": {
                    "action": "navigate",
                    "navigation_path": "#weather"
                  },
                  "double_tap_action": {
                    "action": "navigate",
                    "navigation_path": "#weather"
                  },
                  "hold_action": {
                    "action": "navigate",
                    "navigation_path": "#weather"
                  },
                  "card_layout": "large-2-rows",
                  "sub_button": [
                    {
                      "entity": "sensor.extreme_forecast",
                      "icon": "mdi:thermometer",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.next_rain_forecast",
                      "show_state": true,
                      "show_background": false
                    }
                  ],
                  "styles": "${icon.setAttribute(\"icon\", 'mdi:' + (() => {\n  switch (hass.states['sensor.pirateweather_icon_4h'].state) {\n    case 'clear-day':\n      return 'weather-sunny';\n    case 'clear-night':\n      return 'weather-night';\n    case 'rain':\n      return 'weather-rainy';\n    case 'snow':\n      return 'weather-snowy';\n    case 'sleet':\n      return 'weather-snowy-rainy';\n    case 'wind':\n      return 'weather-windy';\n    case 'fog':\n      return 'weather-fog';\n    case 'cloudy':\n      return 'weather-cloudy';\n    case 'partly-cloudy-day':\n      return 'weather-partly-cloudy';\n    case 'partly-cloudy-night':\n      return 'weather-night-partly-cloudy';\n  }\n})())}\n\n${card.querySelector('.bubble-sub-button-1 .bubble-sub-button-name-container').innerText = hass.states['sensor.extreme_forecast'].attributes.text }\n${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = hass.states['sensor.next_rain_forecast'].attributes.text }\n",
                  "modules": [
                    "normalised_sub_button_size",
                    "colorise_entities"
                  ]
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "button",
                  "button_type": "state",
                  "name": "Inside",
                  "entity": "sensor.weighted_average_inside_apparent_temperature",
                  "tap_action": {
                    "action": "navigate",
                    "navigation_path": "/lovelace/climate"
                  },
                  "double_tap_action": {
                    "action": "navigate",
                    "navigation_path": "/lovelace/climate"
                  },
                  "hold_action": {
                    "action": "navigate",
                    "navigation_path": "/lovelace/climate"
                  },
                  "card_layout": "large-2-rows",
                  "sub_button": [
                    {
                      "entity": "sensor.living_room_apparent_temperature",
                      "icon": "mdi:sofa",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.kitchen_apparent_temperature",
                      "icon": "mdi:fridge",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.dog_bed_area_apparent_temperature",
                      "icon": "mdi:dog-side",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.office_apparent_temperature",
                      "icon": "mdi:desktop-classic",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.bedroom_apparent_temperature",
                      "icon": "mdi:bed",
                      "show_state": true,
                      "show_background": false
                    },
                    {
                      "entity": "sensor.nursery_apparent_temperature",
                      "icon": "mdi:cradle",
                      "show_state": true,
                      "show_background": false
                    }
                  ],
                  "modules": [
                    "normalised_sub_button_size",
                    "colorise_entities"
                  ]
                }
              ],
              "column_span": 1
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:bubble-card",
                      "card_type": "pop-up",
                      "hash": "#device-issues",
                      "button_type": "state",
                      "name": "Device issues",
                      "entity": "group.unavailable_entities",
                      "icon": "mdi:alert-circle",
                      "sub_button": [
                        {
                          "icon": "mdi:refresh",
                          "show_background": false,
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "automation.trigger",
                            "target": {
                              "entity_id": "automation.update_device_issue_and_battery_groups"
                            }
                          }
                        }
                      ],
                      "styles": ".bubble-state::before {\n  content: \"Checked \";\n  white-space: pre;\n}\n",
                      "modules": [
                        "icon_color_mix_in",
                        "datetime_to_relative_time"
                      ],
                      "icon_color_mix_in": {
                        "color": "red"
                      },
                      "datetime_to_relative_time": {
                        "entity": "automation.update_device_issue_and_battery_groups",
                        "attribute": "last_triggered"
                      }
                    },
                    {
                      "type": "tile",
                      "visibility": [
                        {
                          "condition": "state",
                          "entity": "binary_sensor.internet",
                          "state_not": "on"
                        }
                      ],
                      "entity": "binary_sensor.internet",
                      "name": "Internet is disconnected - reconnect to fix issues",
                      "icon": "mdi:close-network",
                      "color": "color-mix(in srgb, var(--color-mix-in-base), red)",
                      "state_content": "last_changed",
                      "vertical": false,
                      "features_position": "bottom",
                      "card_mod": {
                        "style": {
                          "ha-tile-icon$": ":host {\n  --tile-icon-color: color-mix(in srgb, var(--color-mix-in-base), red) !important;\n}\n",
                          "ha-tile-info$": "state-display {\n  opacity: 0.7;\n} state-display::before {\n  content: 'Disconnected';\n}\n"
                        }
                      }
                    },
                    {
                      "type": "markdown",
                      "content": "The entities listed below are unavailable or frozen. \nThere are multiple potential causes for such states, and it is recommended to follow this guide to diagnose and fix them.\n\n<details><summary><i>Resolution guide</i></summary>\n\n1. If the internet is disconnected, try and restore it\n\n1. If the system was recently restarted or reconnected, wait up to 10 minutes or so for configuration to complete\n\n1. Check the device is plugged in or has sufficient battery charge\n\n1. Select an entity \n    - if there is a warning that it is no longer being provided by the relevant integration, fix the configuration if possible or consider deleting it\n    - select the cog icon and check the entity_id seems correct - in particular check if '_2' or similar is appended, this can indiciate it is a duplicate and helps direct the next step\n    - select the 3 dots icon and check device and/or related info, look for and resolve duplicate entities, incorrect names, or any other detected issues - reload the relevant integration or adjust configuration if necessary\n    - check the entity history to determine when the issue started and if that correlates with anything that could have been the cause\n\n1. Try reloading home assistant\n\n1. Try restarting home assistant\n\n1. If none of the above resolve the issue, either delete the entity if not required or add it to the ignored unavailable entities list in the system configuration\n\n</details> {%- if states('sensor.device_issues')|int(1) > 15 -%}\n  15 of {{ states('sensor.device_issues')|int }} device issues are shown below. Resolve these to see the remaining issues.\n{%- endif -%}",
                      "card_mod": {
                        "style": {
                          "ha-markdown$": "summary {\n  background: var(--primary-background-color);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 12px;\n  width: 150px;\n  border-radius: var(--ha-card-border-radius);\n  border: var(--button-border-info);\n}\nsummary, summary i {\n  padding-left: 10px;\n}"
                        }
                      }
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities"
                      },
                      "filter": {
                        "template": "{% set unavailable_entities = state_attr('group.unavailable_entities', 'entity_id') %} {% set frozen_entities = state_attr('group.frozen_entities', 'entity_id') %} {{\n  (\n    (unavailable_entities if unavailable_entities is not none else ()) +\n    (frozen_entities if frozen_entities is not none else ())\n  )[:15]\n}}\n"
                      }
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "history-graph",
                        "title": "History",
                        "hours_to_show": 240,
                        "refresh_interval": 0
                      },
                      "filter": {
                        "template": "{% set unavailable_entities = state_attr('group.unavailable_entities', 'entity_id') %} {% set frozen_entities = state_attr('group.frozen_entities', 'entity_id') %} {{\n  (\n    (unavailable_entities if unavailable_entities is not none else ()) +\n    (frozen_entities if frozen_entities is not none else ())\n  )[:15]\n}}\n"
                      }
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:bubble-card",
                      "card_type": "pop-up",
                      "hash": "#low-batteries",
                      "button_type": "state",
                      "name": "Low batteries",
                      "entity": "group.low_batteries",
                      "icon": "mdi:battery-low",
                      "card_layout": "large",
                      "sub_button": [
                        {
                          "icon": "mdi:refresh",
                          "show_background": false,
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "automation.trigger",
                            "target": {
                              "entity_id": "automation.update_device_issue_and_battery_groups"
                            }
                          }
                        }
                      ],
                      "styles": ".bubble-state::before {\n  content: \"Checked \";\n  white-space: pre;\n}\n",
                      "modules": [
                        "icon_color_mix_in",
                        "datetime_to_relative_time"
                      ],
                      "icon_color_mix_in": {
                        "color": "red"
                      },
                      "datetime_to_relative_time": {
                        "entity": "automation.update_device_issue_and_battery_groups",
                        "attribute": "last_triggered"
                      }
                    },
                    {
                      "type": "tile",
                      "entity": "binary_sensor.internet",
                      "name": "Internet is disconnected - batteries may be unavailable",
                      "state_content": "last_changed",
                      "icon": "mdi:close-network",
                      "color": "color-mix(in srgb, var(--color-mix-in-base), red)",
                      "visibility": [
                        {
                          "condition": "state",
                          "entity": "binary_sensor.internet",
                          "state_not": "on"
                        }
                      ],
                      "card_mod": {
                        "style": {
                          "ha-tile-icon$": ":host {\n  --tile-icon-color: color-mix(in srgb, var(--color-mix-in-base), red) !important;\n}\n",
                          "ha-tile-info$": "state-display {\n  opacity: 0.7;\n}\nstate-display::before {\n  content: 'Disconnected';\n}\n"
                        }
                      }
                    },
                    {
                      "type": "markdown",
                      "content": "Once a battery is too flat for the device to function its battery level may not be reported, and as such appear as \"unavailable\". This can also occur when a battery is ok but the device can't connect. It can be worth checking other device issues first in this case.\n\nBatteries with low levels are still functional, but it is recommended to charge or replace them soon to keep the system functional."
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities"
                      },
                      "filter": {
                        "template": "{{ state_attr('group.low_batteries', 'entity_id') }}"
                      },
                      "sort": {
                        "method": "state"
                      }
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "history-graph",
                        "title": "History",
                        "hours_to_show": 240,
                        "refresh_interval": 0
                      },
                      "filter": {
                        "template": "{{ state_attr('group.low_batteries', 'entity_id') }}"
                      }
                    },
                    {
                      "type": "custom:bubble-card",
                      "card_type": "button",
                      "button_type": "state",
                      "entity": "sensor.device_issues",
                      "show_state": false,
                      "card_layout": "large-2-rows",
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "#device-issues"
                      },
                      "double_tap_action": {
                        "action": "navigate",
                        "navigation_path": "#device-issues"
                      },
                      "hold_action": {
                        "action": "navigate",
                        "navigation_path": "#device-issues"
                      },
                      "sub_button": [
                        {
                          "entity": "sensor.unavailable_entities",
                          "show_state": true,
                          "show_background": false
                        },
                        {
                          "entity": "sensor.frozen_devices",
                          "show_state": true,
                          "show_background": false
                        }
                      ],
                      "visibility": [
                        {
                          "condition": "numeric_state",
                          "entity": "sensor.device_issues",
                          "above": 0
                        }
                      ],
                      "styles": "${card.querySelector('.bubble-name').innerText =  hass.states['sensor.device_issues'].state + ' possibly related device issue' + (hass.states['sensor.device_issues'].state === '1' ? '': 's')}}\n${card.querySelector('.bubble-sub-button-1 .bubble-sub-button-name-container').innerText = hass.states['sensor.unavailable_entities'].state + ' unavailable' }\n${card.querySelector('.bubble-sub-button-2 .bubble-sub-button-name-container').innerText = hass.states['sensor.frozen_entities'].state + ' frozen' }\n",
                      "modules": [
                        "normalised_sub_button_size",
                        "icon_color_mix_in"
                      ],
                      "icon_color_mix_in": {
                        "color": "red"
                      }
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:bubble-card",
                      "card_type": "pop-up",
                      "hash": "#charging-batteries",
                      "button_type": "state",
                      "name": "Charging batteries",
                      "entity": "group.charging_batteries",
                      "icon": "mdi:battery-charging",
                      "sub_button": [
                        {
                          "icon": "mdi:refresh",
                          "show_background": false,
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "automation.trigger",
                            "target": {
                              "entity_id": "automation.update_device_issue_and_battery_groups"
                            }
                          }
                        }
                      ],
                      "styles": ".bubble-state::before {\n  content: \"Checked \";\n  white-space: pre;\n}\n",
                      "modules": [
                        "datetime_to_relative_time",
                        "icon_color_mix_in"
                      ],
                      "datetime_to_relative_time": {
                        "entity": "automation.update_device_issue_and_battery_groups",
                        "attribute": "last_triggered"
                      },
                      "icon_color_mix_in": {
                        "color": "yellow"
                      }
                    },
                    {
                      "type": "markdown",
                      "content": "Devices with integrated batteries that report their charge status are displayed here. You will be notified when a device is fully charged."
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities"
                      },
                      "filter": {
                        "template": "{{ state_attr('group.charging_batteries', 'entity_id') }}"
                      },
                      "sort": {
                        "method": "state"
                      }
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "history-graph",
                        "title": "History",
                        "hours_to_show": 6,
                        "refresh_interval": 0
                      },
                      "filter": {
                        "template": "{{ state_attr('group.charging_batteries', 'entity_id') }}"
                      }
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:bubble-card",
                      "card_type": "pop-up",
                      "hash": "#weather",
                      "button_type": "name",
                      "name": "Weather",
                      "icon": "mdi:text-box",
                      "show_name": true,
                      "card_layout": "large",
                      "styles": ".large .bubble-icon-container {\n  min-width: 36px !important;\n  min-height: 36px !important;\n}\n"
                    },
                    {
                      "type": "weather-forecast",
                      "show_current": false,
                      "show_forecast": true,
                      "entity": "weather.pirateweather",
                      "forecast_type": "daily"
                    },
                    {
                      "type": "tile",
                      "entity": "sensor.pirateweather_nearest_storm_distance",
                      "name": "Nearest storm"
                    }
                  ]
                }
              ]
            }
          ],
          "cards": [],
          "dense_section_placement": true,
          "type": "sections",
          "max_columns": 2,
          "badges": []
        },
        {
          "title": "Climate",
          "path": "climate",
          "icon": "mdi:thermometer",
          "cards": [
            {
              "cards": [
                {
                  "entities": [
                    {
                      "entity": "sensor.weighted_average_inside_apparent_temperature",
                      "name": "Inside"
                    },
                    {
                      "entity": "sensor.outside_apparent_temperature",
                      "name": "Outside"
                    },
                    {
                      "entity": "sensor.extreme_forecast"
                    }
                  ],
                  "show_name": true,
                  "type": "glance"
                },
                {
                  "entities": [
                    {
                      "entity": "sensor.bedroom_apparent_temperature",
                      "name": "Bedroom"
                    },
                    {
                      "entity": "sensor.nursery_apparent_temperature",
                      "name": "Nursery"
                    },
                    {
                      "entity": "sensor.office_apparent_temperature",
                      "name": "Office"
                    },
                    {
                      "entity": "sensor.dining_room_apparent_temperature",
                      "name": "Dining room"
                    },
                    {
                      "entity": "sensor.living_room_apparent_temperature",
                      "name": "Living room"
                    },
                    {
                      "entity": "sensor.dog_bed_area_apparent_temperature",
                      "name": "Dog bed area"
                    },
                    {
                      "entity": "sensor.kitchen_apparent_temperature",
                      "name": "Kitchen"
                    },
                    {
                      "entity": "sensor.bathroom_apparent_temperature",
                      "name": "Bathroom"
                    },
                    {
                      "entity": "sensor.entryway_apparent_temperature",
                      "name": "Entryway"
                    }
                  ],
                  "show_name": true,
                  "columns": 3,
                  "type": "glance"
                },
                {
                  "type": "glance",
                  "entities": [
                    {
                      "entity": "input_number.humidifier_target"
                    },
                    {
                      "entity": "sensor.bedroom_humidity",
                      "name": "Bedroom"
                    },
                    {
                      "entity": "sensor.nursery_humidity",
                      "name": "Nursery"
                    }
                  ]
                }
              ],
              "type": "vertical-stack"
            },
            {
              "cards": [
                {
                  "show_name": true,
                  "show_icon": true,
                  "show_state": false,
                  "type": "glance",
                  "entities": [
                    {
                      "entity": "group.all_aircon",
                      "name": "All"
                    },
                    {
                      "entity": "climate.living_room_aircon",
                      "name": "Living room"
                    },
                    {
                      "entity": "climate.dining_room_aircon",
                      "name": "Dining room"
                    },
                    {
                      "entity": "climate.bedroom_aircon"
                    }
                  ],
                  "state_color": true,
                  "title": "Aircon"
                },
                {
                  "show_name": true,
                  "show_icon": true,
                  "show_state": false,
                  "type": "glance",
                  "entities": [
                    {
                      "entity": "group.all_fans",
                      "name": "All"
                    },
                    {
                      "entity": "fan.nursery",
                      "name": "Nursery"
                    },
                    {
                      "entity": "fan.office",
                      "name": "Office"
                    },
                    {
                      "entity": "fan.bedroom",
                      "name": "Bedroom"
                    }
                  ],
                  "state_color": true,
                  "title": "Fans"
                },
                {
                  "show_name": true,
                  "show_icon": true,
                  "show_state": false,
                  "type": "glance",
                  "entities": [
                    {
                      "entity": "group.all_heaters",
                      "name": "All"
                    },
                    {
                      "entity": "switch.nursery_heater",
                      "name": "Nursery",
                      "icon": "mdi:radiator"
                    },
                    {
                      "entity": "switch.office_heater",
                      "name": "Office",
                      "icon": "mdi:radiator"
                    }
                  ],
                  "title": "Heaters"
                },
                {
                  "show_name": true,
                  "show_icon": true,
                  "show_state": false,
                  "type": "glance",
                  "entities": [
                    {
                      "entity": "group.all_humidifiers",
                      "name": "All"
                    },
                    {
                      "entity": "humidifier.bedroom",
                      "name": "Bedroom",
                      "icon": "mdi:air-humidifier"
                    },
                    {
                      "entity": "humidifier.nursery",
                      "name": "Nursery",
                      "icon": "mdi:air-humidifier"
                    }
                  ],
                  "title": "Humidifiers"
                },
                {
                  "content": "Manually controlling aircon, fans, or heaters may disable **automatic control** for those devices. You can toggle **automatic control** of all/individual devices below.",
                  "type": "markdown"
                },
                {
                  "type": "entities",
                  "title": "Automatic climate control",
                  "entities": [
                    "input_boolean.control_living_room_aircon",
                    "input_boolean.control_dining_room_aircon",
                    "input_boolean.control_bedroom_aircon",
                    "input_boolean.control_nursery_fan",
                    "input_boolean.control_office_fan",
                    "input_boolean.control_bedroom_fan",
                    "input_boolean.control_nursery_heater",
                    "input_boolean.control_office_heater",
                    "input_boolean.control_bedroom_humidifier",
                    "input_boolean.control_nursery_humidifier"
                  ],
                  "show_header_toggle": true
                },
                {
                  "type": "markdown",
                  "content": "**Automatic climate control** will control each aircon, fan, and heater based on room temperature and occupancy.\nIf the **pets are home alone** (or are going to be soon), you can manually specify this or wait for their movement to be detected to trigger **climate control**.\nOnly the bedroom aircon will be controlled when **pets are home alone** (bedroom and office fans will be on as well) or after the specified bed time. **Aircon** can also be manually turned on and off. These settings can be controlled by telling Siri/Google:\n- **\"climate control on\"** or **\"climate control off\"**\n- **\"aircon on\"** or **\"aircon off\"**\n\nNOTE THAT DEVICES WILL ALWAYS TURN OFF WHEN AWAY EVEN IF AUTOMATIC CONTROL DISABLED"
                }
              ],
              "type": "vertical-stack"
            },
            {
              "entities": [
                {
                  "entity": "input_number.cooling_target_temperature"
                },
                {
                  "entity": "input_number.heating_target_temperature"
                },
                {
                  "entity": "input_number.high_temperature_aircon_trigger"
                },
                {
                  "entity": "input_number.low_temperature_aircon_trigger"
                }
              ],
              "show_header_toggle": false,
              "title": "Day",
              "type": "entities",
              "state_color": true
            },
            {
              "entities": [
                {
                  "entity": "input_number.sleep_cooling_target_temperature"
                },
                {
                  "entity": "input_number.sleep_heating_target_temperature"
                },
                {
                  "entity": "input_number.sleep_high_temperature_aircon_trigger"
                },
                {
                  "entity": "input_number.sleep_low_temperature_aircon_trigger"
                }
              ],
              "show_header_toggle": false,
              "title": "Night",
              "type": "entities",
              "state_color": true
            },
            {
              "type": "entities",
              "entities": [
                {
                  "entity": "input_number.aircon_door_check_delay"
                },
                {
                  "entity": "input_number.aircon_vacating_delay"
                },
                {
                  "entity": "input_number.fan_vacating_delay"
                },
                {
                  "entity": "input_number.heater_vacating_delay"
                },
                {
                  "entity": "input_number.humidifier_vacating_delay"
                }
              ],
              "title": "Delays"
            },
            {
              "cards": [
                {
                  "entities": [
                    {
                      "entity": "sensor.weighted_average_inside_apparent_temperature",
                      "name": "Inside"
                    },
                    {
                      "entity": "sensor.outside_apparent_temperature",
                      "name": "Outside"
                    },
                    {
                      "entity": "sensor.bathroom_apparent_temperature",
                      "name": "Bathroom"
                    },
                    {
                      "entity": "sensor.bedroom_apparent_temperature",
                      "name": "Bedroom"
                    },
                    {
                      "entity": "sensor.dining_room_apparent_temperature",
                      "name": "Dining room"
                    },
                    {
                      "entity": "sensor.dog_bed_area_apparent_temperature",
                      "name": "Dog bed area"
                    },
                    {
                      "entity": "sensor.entryway_apparent_temperature",
                      "name": "Entryway"
                    },
                    {
                      "entity": "sensor.kitchen_apparent_temperature",
                      "name": "Kitchen"
                    },
                    {
                      "entity": "sensor.living_room_apparent_temperature",
                      "name": "Living room"
                    },
                    {
                      "entity": "sensor.nursery_apparent_temperature",
                      "name": "Nursery"
                    },
                    {
                      "entity": "sensor.office_apparent_temperature",
                      "name": "Office"
                    }
                  ],
                  "refresh_interval": 0,
                  "title": "Temperatures",
                  "type": "history-graph",
                  "hours_to_show": 12,
                  "logarithmic_scale": false
                },
                {
                  "entities": [
                    {
                      "entity": "sensor.bedroom_humidity",
                      "name": "Bedroom"
                    },
                    {
                      "entity": "sensor.nursery_humidity",
                      "name": "Nursery"
                    }
                  ],
                  "refresh_interval": 0,
                  "title": "Humidities",
                  "type": "history-graph",
                  "hours_to_show": 12,
                  "logarithmic_scale": false
                }
              ],
              "type": "vertical-stack"
            },
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "entities": [
                    {
                      "entity": "input_datetime.morning_time"
                    },
                    {
                      "entity": "input_datetime.nursery_time"
                    },
                    {
                      "entity": "input_datetime.bed_time"
                    }
                  ],
                  "show_header_toggle": false,
                  "type": "entities",
                  "state_color": true
                },
                {
                  "content": "Specify the time for which the ***Morning*** scene and pre-sleep climate controls will trigger. For more information, see the [**Guide**](/lovelace/guide).",
                  "type": "markdown"
                }
              ]
            }
          ]
        },
        {
          "path": "lights",
          "title": "Lights",
          "icon": "mdi:lightbulb-variant",
          "cards": [
            {
              "cards": [
                {
                  "type": "glance",
                  "entities": [
                    {
                      "entity": "group.all_lights",
                      "name": "Any / all"
                    },
                    {
                      "entity": "group.entryway_lights",
                      "name": "Entryway"
                    },
                    {
                      "entity": "group.kitchen_lights",
                      "name": "Kitchen"
                    },
                    {
                      "entity": "group.tv_lights",
                      "name": "TV"
                    },
                    {
                      "entity": "group.dining_room_lights",
                      "name": "Dining"
                    },
                    {
                      "entity": "light.hall",
                      "name": "Hall"
                    },
                    {
                      "entity": "light.bathroom",
                      "name": "Bathroom"
                    },
                    {
                      "entity": "light.bedroom",
                      "name": "Bedroom"
                    },
                    {
                      "entity": "light.nursery",
                      "name": "Nursery"
                    },
                    {
                      "entity": "light.office",
                      "name": "Office"
                    }
                  ],
                  "show_icon": true,
                  "show_name": true,
                  "show_state": false,
                  "title": "Lights",
                  "state_color": true
                },
                {
                  "content": "Manually controlling lights may disable **automatic control** for those lights. You can toggle **automatic control** of all/individual lights below.",
                  "type": "markdown"
                },
                {
                  "type": "entities",
                  "title": "Automatic light control",
                  "entities": [
                    "input_boolean.control_entryway_lights",
                    "input_boolean.control_kitchen_light",
                    "input_boolean.control_kitchen_strip_light",
                    "input_boolean.control_tv_lights",
                    "input_boolean.control_dining_room_lights",
                    "input_boolean.control_hall_light",
                    "input_boolean.control_bathroom_light",
                    "input_boolean.control_bedroom_light",
                    "input_boolean.control_nursery_light",
                    "input_boolean.control_office_light"
                  ],
                  "show_header_toggle": true
                },
                {
                  "type": "markdown",
                  "content": "Lighting in the entryway, kitchen, office and bedroom will automatically brighten when someone enters, and dim shortly after they leave (depending on scene settings). Automatic bedroom lighting is disabled as soon as the ***Sleep*** scene starts, only enabling again when the bedroom **button** is clicked or after illuminance levels peak (i.e. after blinds are first opened in the morning).\n\nNOTE THAT DEVICES WILL ALWAYS TURN OFF WHEN AWAY EVEN IF AUTOMATIC CONTROL DISABLED"
                }
              ],
              "type": "vertical-stack"
            },
            {
              "cards": [
                {
                  "entities": [
                    {
                      "entity": "input_number.initial_circadian_brightness"
                    },
                    {
                      "entity": "input_number.initial_circadian_kelvin"
                    },
                    {
                      "entity": "input_number.final_circadian_brightness"
                    },
                    {
                      "entity": "input_number.final_circadian_kelvin"
                    },
                    {
                      "entity": "input_number.circadian_initial_sunset_offset"
                    },
                    {
                      "entity": "input_datetime.circadian_end_time"
                    }
                  ],
                  "title": "Circadian Rhythm",
                  "type": "entities",
                  "state_color": false
                },
                {
                  "content": "Lighting at night will gradually transition between the initial and final brightness and colour values specified here.\n\nInitial circadian settings occur after sunset (specified in hours by *initial sunset offset*) and reaches the final values at *end time*.",
                  "type": "markdown"
                }
              ],
              "type": "vertical-stack"
            },
            {
              "cards": [
                {
                  "content": "Values here specify the *brightness* and colour temperature of lighting in different scenes. Colour temperature ranges from warm white (2000 *kelvin*) to cold white (4500 *kelvin*).\n\n*Motion* indicates the value is specific to when the room is occupied (otherwise defaulting to the normal values specified, the current circadian value, off, or maximum - depending on the scene).\n\n*Vacating delay* specifies how long the light will wait after someone leaves the room before reverting to its previous state.\n\nIf a *transition period* is available the light will smoothly change over that period to the motion brightness and kelvin specified or implied.",
                  "type": "markdown"
                },
                {
                  "entities": [
                    {
                      "entity": "input_number.night_motion_brightness"
                    },
                    {
                      "entity": "input_number.night_motion_kelvin"
                    },
                    {
                      "entity": "input_number.night_transition_period"
                    },
                    {
                      "entity": "input_number.night_vacating_delay"
                    }
                  ],
                  "title": "Night",
                  "type": "entities"
                },
                {
                  "entities": [
                    {
                      "entity": "input_number.tv_brightness"
                    },
                    {
                      "entity": "input_number.tv_kelvin"
                    },
                    {
                      "entity": "input_number.tv_motion_brightness"
                    },
                    {
                      "entity": "input_number.tv_transition_period"
                    },
                    {
                      "entity": "input_number.tv_vacating_delay"
                    }
                  ],
                  "title": "TV",
                  "type": "entities"
                },
                {
                  "entities": [
                    {
                      "entity": "input_number.sleep_motion_brightness"
                    },
                    {
                      "entity": "input_number.sleep_motion_kelvin"
                    },
                    {
                      "entity": "input_number.sleep_transition_period"
                    },
                    {
                      "entity": "input_number.sleep_vacating_delay"
                    }
                  ],
                  "title": "Sleep",
                  "type": "entities"
                },
                {
                  "entities": [
                    {
                      "entity": "input_number.morning_brightness"
                    },
                    {
                      "entity": "input_number.morning_kelvin"
                    },
                    {
                      "entity": "input_number.morning_vacating_delay"
                    }
                  ],
                  "title": "Morning",
                  "type": "entities"
                }
              ],
              "type": "vertical-stack"
            },
            {
              "entities": [
                {
                  "entity": "input_number.office_vacating_delay"
                },
                {
                  "entity": "input_number.bathroom_vacating_delay"
                },
                {
                  "entity": "input_number.bedroom_vacating_delay"
                },
                {
                  "entity": "input_number.nursery_vacating_delay"
                }
              ],
              "title": "Room Vacating Delays",
              "type": "entities"
            },
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "entities": [
                    {
                      "entity": "input_datetime.morning_time"
                    },
                    {
                      "entity": "input_datetime.nursery_time"
                    },
                    {
                      "entity": "input_datetime.bed_time"
                    }
                  ],
                  "show_header_toggle": false,
                  "type": "entities",
                  "state_color": true
                },
                {
                  "content": "Specify the time for which the ***Morning*** scene and pre-sleep climate controls will trigger. For more information, see the [**Guide**](/lovelace/guide).",
                  "type": "markdown"
                }
              ]
            }
          ]
        },
        {
          "title": "Presence",
          "path": "presence",
          "icon": "mdi:cctv",
          "badges": [],
          "cards": [
            {
              "aspect_ratio": "2",
              "default_zoom": 12,
              "auto_fit": true,
              "entities": [
                {
                  "entity": "device_tracker.dan_s_phone"
                },
                {
                  "entity": "device_tracker.rachel_s_phone"
                }
              ],
              "hours_to_show": 1,
              "type": "map",
              "theme_mode": "dark"
            },
            {
              "type": "custom:webrtc-camera",
              "entity": "camera.front_door",
              "poster": "image.front_door_event_image",
              "ui": true,
              "shortcuts": [
                {
                  "name": "Play",
                  "icon": "mdi:play",
                  "service": "camera.turn_on",
                  "service_data": {
                    "entity_id": "camera.front_door"
                  }
                },
                {
                  "name": "Stop",
                  "icon": "mdi:stop",
                  "service": "camera.turn_off",
                  "service_data": {
                    "entity_id": "camera.front_door"
                  }
                }
              ]
            },
            {
              "type": "custom:webrtc-camera",
              "entity": "camera.entryway",
              "poster": "image.entryway_event_image",
              "ui": true,
              "shortcuts": [
                {
                  "name": "Play",
                  "icon": "mdi:play",
                  "service": "camera.turn_on",
                  "service_data": {
                    "entity_id": "camera.entryway"
                  }
                },
                {
                  "name": "Stop",
                  "icon": "mdi:stop",
                  "service": "camera.turn_off",
                  "service_data": {
                    "entity_id": "camera.entryway"
                  }
                }
              ]
            },
            {
              "type": "custom:webrtc-camera",
              "entity": "camera.living_room",
              "poster": "image.living_room_event_image",
              "ui": true,
              "shortcuts": [
                {
                  "name": "Play",
                  "icon": "mdi:play",
                  "service": "camera.turn_on",
                  "service_data": {
                    "entity_id": "camera.living_room"
                  }
                },
                {
                  "name": "Stop",
                  "icon": "mdi:stop",
                  "service": "camera.turn_off",
                  "service_data": {
                    "entity_id": "camera.living_room"
                  }
                }
              ]
            },
            {
              "type": "custom:webrtc-camera",
              "entity": "camera.back_deck",
              "poster": "image.back_deck_event_image",
              "ui": true,
              "shortcuts": [
                {
                  "name": "Play",
                  "icon": "mdi:play",
                  "service": "camera.turn_on",
                  "service_data": {
                    "entity_id": "camera.back_deck"
                  }
                },
                {
                  "name": "Stop",
                  "icon": "mdi:stop",
                  "service": "camera.turn_off",
                  "service_data": {
                    "entity_id": "camera.back_deck"
                  }
                }
              ]
            },
            {
              "type": "custom:webrtc-camera",
              "entity": "camera.back_door",
              "poster": "image.back_door_event_image",
              "ui": true,
              "shortcuts": [
                {
                  "name": "Play",
                  "icon": "mdi:play",
                  "service": "camera.turn_on",
                  "service_data": {
                    "entity_id": "camera.back_door"
                  }
                },
                {
                  "name": "Stop",
                  "icon": "mdi:stop",
                  "service": "camera.turn_off",
                  "service_data": {
                    "entity_id": "camera.back_door"
                  }
                }
              ]
            },
            {
              "type": "custom:webrtc-camera",
              "entity": "camera.garage",
              "poster": "image.garage_event_image",
              "ui": true,
              "shortcuts": [
                {
                  "name": "Play",
                  "icon": "mdi:play",
                  "service": "camera.turn_on",
                  "service_data": {
                    "entity_id": "camera.garage"
                  }
                },
                {
                  "name": "Stop",
                  "icon": "mdi:stop",
                  "service": "camera.turn_off",
                  "service_data": {
                    "entity_id": "camera.garage"
                  }
                }
              ]
            },
            {
              "type": "markdown",
              "title": "Nursery camera alerts",
              "content": "{% set alerts = state_attr('sensor.cuboai_last_alert', 'alerts') %}\n{% if alerts %}\n{% for alert in alerts %}\n**{{ alert['type'].replace('CUBO_ALERT_','').replace('_',' ').title() }}**\n  {{ as_timestamp(alert['created']) | timestamp_custom('%Y-%m-%d %H:%M', true) }}\n  {% if alert['image'] %}![img]({{ alert['image'] }}){% else %}-{% endif %}\n{% endfor %}\n{% else %}\n_No recent alerts_\n{% endif %}\n"
            },
            {
              "type": "history-graph",
              "entities": [
                {
                  "entity": "binary_sensor.front_door_motion",
                  "name": "Front door"
                },
                {
                  "entity": "lock.door_lock",
                  "name": "Front door lock"
                },
                {
                  "entity": "binary_sensor.entryway_multisensor_motion",
                  "name": "Entryway"
                },
                {
                  "entity": "binary_sensor.kitchen_presence_sensor_occupancy",
                  "name": "Kitchen"
                },
                {
                  "entity": "binary_sensor.kitchen_door_motion",
                  "name": "Kitchen door"
                },
                {
                  "entity": "binary_sensor.back_deck_motion_detected",
                  "name": "Back deck"
                },
                {
                  "entity": "binary_sensor.living_room_presence_sensor_occupancy",
                  "name": "Living room"
                },
                {
                  "entity": "binary_sensor.living_room_motion_detected",
                  "name": "Living room camera"
                },
                {
                  "entity": "binary_sensor.dining_room_multisensor_motion",
                  "name": "Dining room"
                },
                {
                  "entity": "binary_sensor.dining_room_balcony_door_motion",
                  "name": "Dining room balcony door"
                },
                {
                  "entity": "binary_sensor.hall_multisensor_motion",
                  "name": "Hall"
                },
                {
                  "entity": "binary_sensor.bathroom_multisensor_motion",
                  "name": "Bathroom"
                },
                {
                  "entity": "binary_sensor.office_presence_sensor_occupancy",
                  "name": "Office"
                },
                {
                  "entity": "binary_sensor.nursery_presence_sensor_occupancy",
                  "name": "Nursery"
                },
                {
                  "entity": "binary_sensor.bedroom_presence_sensor_occupancy",
                  "name": "Bedroom"
                },
                {
                  "entity": "binary_sensor.bedroom_balcony_door_motion",
                  "name": "Bedroom balcony door"
                },
                {
                  "entity": "binary_sensor.back_door_motion_detected",
                  "name": "Back door"
                },
                {
                  "entity": "binary_sensor.garage_motion_detected",
                  "name": "Garage"
                }
              ],
              "title": "Motion in last hour",
              "logarithmic_scale": false,
              "hours_to_show": 1
            },
            {
              "type": "history-graph",
              "entities": [
                {
                  "entity": "binary_sensor.front_door_motion",
                  "name": "Front door"
                },
                {
                  "entity": "lock.door_lock",
                  "name": "Front door lock"
                },
                {
                  "entity": "binary_sensor.entryway_multisensor_motion",
                  "name": "Entryway"
                },
                {
                  "entity": "binary_sensor.kitchen_presence_sensor_occupancy",
                  "name": "Kitchen"
                },
                {
                  "entity": "binary_sensor.kitchen_door_motion",
                  "name": "Kitchen door"
                },
                {
                  "entity": "binary_sensor.back_deck_motion_detected",
                  "name": "Back deck"
                },
                {
                  "entity": "binary_sensor.living_room_presence_sensor_occupancy",
                  "name": "Living room"
                },
                {
                  "entity": "binary_sensor.living_room_motion_detected",
                  "name": "Living room camera"
                },
                {
                  "entity": "binary_sensor.dining_room_multisensor_motion",
                  "name": "Dining room"
                },
                {
                  "entity": "binary_sensor.dining_room_balcony_door_motion",
                  "name": "Dining room balcony door"
                },
                {
                  "entity": "binary_sensor.hall_multisensor_motion",
                  "name": "Hall"
                },
                {
                  "entity": "binary_sensor.bathroom_multisensor_motion",
                  "name": "Bathroom"
                },
                {
                  "entity": "binary_sensor.office_presence_sensor_occupancy",
                  "name": "Office"
                },
                {
                  "entity": "binary_sensor.nursery_presence_sensor_occupancy",
                  "name": "Nursery"
                },
                {
                  "entity": "binary_sensor.bedroom_presence_sensor_occupancy",
                  "name": "Bedroom"
                },
                {
                  "entity": "binary_sensor.bedroom_balcony_door_motion",
                  "name": "Bedroom balcony door"
                },
                {
                  "entity": "binary_sensor.back_door_motion_detected",
                  "name": "Back door"
                },
                {
                  "entity": "binary_sensor.garage_motion_detected",
                  "name": "Garage"
                }
              ],
              "logarithmic_scale": false,
              "hours_to_show": 24,
              "title": "Motion over 24 hours"
            }
          ],
          "visible": [
            {
              "user": "15ff7a86d4ae4d38a60003ad4064ff78"
            },
            {
              "user": "037b9dab7fb04176b342f8c42a79bb17"
            }
          ]
        },
        {
          "type": "sections",
          "path": "electricity",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Power",
                  "heading_style": "subtitle",
                  "icon": "mdi:flash",
                  "badges": [
                    {
                      "type": "entity",
                      "show_state": true,
                      "show_icon": true,
                      "entity": "sensor.texts",
                      "name": "Guide",
                      "state_content": "name",
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/guide"
                      },
                      "icon": "mdi:text-box"
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "screen",
                      "media_query": "(min-width: 0px) and (max-width: 767px)"
                    }
                  ]
                },
                {
                  "type": "heading",
                  "heading": "Power",
                  "heading_style": "subtitle",
                  "icon": "mdi:flash",
                  "visibility": [
                    {
                      "condition": "screen",
                      "media_query": "(min-width: 768px)"
                    }
                  ]
                },
                {
                  "type": "custom:power-flow-card-plus",
                  "entities": {
                    "grid": {
                      "entity": "sensor.power_meter_power_grid",
                      "secondary_info": {
                        "template": "",
                        "accept_negative": true
                      },
                      "color_circle": true,
                      "display_state": "one_way",
                      "use_metadata": false,
                      "color_value": true,
                      "tap_action": {
                        "action": "more-info"
                      },
                      "display_zero_tolerance": 50
                    },
                    "solar": {
                      "entity": "sensor.power_meter_power_photovoltaics",
                      "display_zero_state": true,
                      "secondary_info": {},
                      "color_value": false,
                      "color_icon": false,
                      "invert_state": false,
                      "tap_action": {
                        "action": "more-info"
                      },
                      "display_zero_tolerance": 50
                    },
                    "fossil_fuel_percentage": {
                      "state_type": "percentage",
                      "secondary_info": {},
                      "entity": "sensor.electricity_non_renewable_percentage",
                      "color_value": false,
                      "display_zero": false,
                      "color_icon": true,
                      "display_zero_state": false,
                      "name": "Renewable",
                      "tap_action": {
                        "action": "more-info"
                      }
                    },
                    "home": {
                      "secondary_info": {},
                      "subtract_individual": false,
                      "circle_animation": true,
                      "override_state": false,
                      "entity": "sensor.power_meter_power_load_consumed",
                      "tap_action": {
                        "action": "more-info"
                      }
                    },
                    "individual": [],
                    "battery": {
                      "state_of_charge": "sensor.battery_state_of_charge",
                      "state_of_charge_unit_white_space": false,
                      "show_state_of_charge": true,
                      "color_state_of_charge_value": true,
                      "color_circle": true,
                      "display_state": "one_way",
                      "invert_state": false,
                      "color_value": true,
                      "use_metadata": false,
                      "entity": "sensor.power_meter_power_battery",
                      "tap_action": {
                        "action": "more-info"
                      },
                      "display_zero_tolerance": 50
                    }
                  },
                  "clickable_entities": false,
                  "display_zero_lines": {
                    "mode": "show",
                    "transparency": 50,
                    "grey_color": [
                      189,
                      189,
                      189
                    ]
                  },
                  "use_new_flow_rate_model": true,
                  "w_decimals": 0,
                  "kw_decimals": 1,
                  "min_flow_rate": 0.75,
                  "max_flow_rate": 6,
                  "max_expected_power": 2000,
                  "min_expected_power": 0.01,
                  "watt_threshold": 1000,
                  "transparency_zero_lines": 0,
                  "disable_dots": false,
                  "card_mod": {
                    "style": "#battery-state-of-charge-text::after {\n  content: \" {{ (states['sensor.battery_time_remaining'].state|int(0)|string + 'h') if states['sensor.battery_time_remaining'].state|float(1) >= 1 else ((states['sensor.battery_time_remaining'].state|float * 60)|round|string + 'm') }}\";\n}\n"
                  }
                },
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "custom:bar-card",
                    "height": "30px",
                    "positions": {
                      "icon": "inside",
                      "indicator": "inside"
                    },
                    "max": 1000,
                    "severity": [
                      {
                        "color": "#7bc13c",
                        "from": 0,
                        "to": 50
                      },
                      {
                        "color": "#c1bb3c",
                        "from": 50,
                        "to": 250
                      },
                      {
                        "color": "#ff8100",
                        "from": 250,
                        "to": 750
                      },
                      {
                        "color": "#ff6700",
                        "from": 750,
                        "to": 1500
                      },
                      {
                        "color": "#ff4d00",
                        "from": 1500,
                        "to": 50000
                      }
                    ],
                    "unit_of_measurement": "W",
                    "decimal": 0,
                    "card_mod": {
                      "style": "bar-card-iconbar {\n  --paper-item-icon-color: var(--text-secondary-color) !important;\n  padding-left: 10px;\n  justify-content: left;\n} bar-card-name {\n  white-space: nowrap;\n  width: 100%;\n  padding-right: 10px;\n} bar-card-value {\n  padding-right: 5px\n} bar-card-currentbar, bar-card-backgroundbar {\n  border-radius: 10px !important;\n} bar-card-currentbar {\n  opacity: 0.5;\n}"
                    }
                  },
                  "entities": [
                    {
                      "entity": "sensor.all_light_power",
                      "name": "Lights",
                      "icon": "mdi:lightbulb-group"
                    },
                    {
                      "entity": "sensor.living_room_aircon_power",
                      "name": "Living room aircon",
                      "icon": "mdi:air-conditioner"
                    },
                    {
                      "entity": "sensor.dining_room_aircon_power",
                      "name": "Dining room aircon",
                      "icon": "mdi:air-conditioner"
                    },
                    {
                      "entity": "sensor.bedroom_aircon_power",
                      "name": "Bedroom aircon",
                      "icon": "mdi:air-conditioner"
                    },
                    {
                      "entity": "sensor.office_heater_power",
                      "name": "Office heater",
                      "icon": "mdi:radiator"
                    },
                    {
                      "entity": "sensor.nursery_heater_power",
                      "name": "Nursery heater",
                      "icon": "mdi:radiator"
                    },
                    {
                      "entity": "sensor.all_fan_power",
                      "name": "Fans",
                      "icon": "mdi:fan"
                    },
                    {
                      "entity": "sensor.all_humidifier_power",
                      "name": "Humidifiers",
                      "icon": "mdi:air-humidifier"
                    },
                    {
                      "entity": "sensor.kitchen_appliances_power",
                      "name": "Kitchen appliances",
                      "icon": "mdi:kettle-pour-over"
                    },
                    {
                      "entity": "sensor.dishwasher_power",
                      "name": "Dishwasher",
                      "icon": "mdi:dishwasher"
                    },
                    {
                      "entity": "sensor.fridge_power",
                      "name": "Fridge",
                      "icon": "mdi:fridge"
                    },
                    {
                      "entity": "sensor.freezer_mini_fridge_routers_power",
                      "name": "Freezer, mini fridge, routers",
                      "icon": "mdi:fridge-industrial"
                    },
                    {
                      "entity": "sensor.washer_power",
                      "name": "Washer",
                      "icon": "mdi:washing-machine"
                    },
                    {
                      "entity": "sensor.dryer_power",
                      "name": "Dryer",
                      "icon": "mdi:tumble-dryer"
                    },
                    {
                      "entity": "sensor.tv_speakers_pc_home_assistant_router_relay_security_hub_power",
                      "name": "TV, speakers, PC, Home Assistant, router relay, security hub",
                      "icon": "mdi:television"
                    },
                    {
                      "entity": "sensor.water_heater_oven_stove_guest_suite_garage_all_other_power",
                      "name": "Water heater, oven & stove, guest suite, garage, all other",
                      "icon": "mdi:water-boiler"
                    },
                    {
                      "entity": "sensor.office_desk_computer_monitor_cooler_fish_tank_power",
                      "name": "Office desk, computer & monitor, cooler, fish tank",
                      "icon": "mdi:desktop-tower-monitor"
                    },
                    {
                      "entity": "sensor.phone_chargers_power",
                      "name": "Phone chargers",
                      "icon": "mdi:cellphone-charging"
                    },
                    {
                      "entity": "sensor.sensors_power",
                      "name": "Sensors",
                      "icon": "mdi:motion-sensor"
                    },
                    {
                      "entity": "sensor.paludarium_picture_frame_camera_power",
                      "name": "Paludarium, picture frame, camera",
                      "icon": "mdi:fishbowl"
                    },
                    {
                      "entity": "sensor.all_standby_power",
                      "name": "Standby",
                      "icon": "mdi:power-standby"
                    }
                  ],
                  "filter": {
                    "exclude": [
                      {
                        "state": "<5"
                      },
                      {
                        "state": "un*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "state",
                    "numeric": true,
                    "reverse": true
                  }
                },
                {
                  "type": "markdown",
                  "content": "**Power** shows the current electricity usage across the home, while **energy** shows electricity usage over time.\nEnergy shows today’s usage by default, but you can change the day or time period using the controls shown.\n\nPower and energy is tracked in the groups shown based on sensors and logic.\n\n<details><summary><i>Noteworthy groups</i></summary>\n\n- *Water heater, oven & stove, guest suite, garage, all other*\nComponents of this group could not be directly tracked, so the group is derived from total reported usage at the inverter minus all other tracked usage.\n\n- *Standby*\nThe total estimated power usage of all devices in standby. This total is only shown for reference as each component’s power is already included in other groups. When the standby power drops it is because a component is no longer in standby mode.\n</details>",
                  "card_mod": {
                    "style": {
                      "ha-markdown$": "summary {\n  background: var(--primary-background-color);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 12px;\n  width: 180px;\n  border-radius: var(--ha-card-border-radius);\n  border: var(--button-border-info);\n}\nsummary, summary i {\n  padding-left: 10px;\n}\nspan {\n  text-shadow: 0px 0px 2px var(--accent-color);\n}"
                    }
                  }
                }
              ],
              "column_span": 1
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Energy",
                  "heading_style": "subtitle",
                  "icon": "mdi:lightning-bolt"
                },
                {
                  "type": "energy-distribution"
                },
                {
                  "type": "energy-date-selection"
                },
                {
                  "type": "energy-usage-graph"
                },
                {
                  "type": "energy-devices-detail-graph"
                }
              ],
              "column_span": 1
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Costs",
                  "heading_style": "subtitle",
                  "icon": "mdi:currency-usd"
                },
                {
                  "type": "custom:mod-card",
                  "card_mod": {
                    "style": "ha-card {\n  background: var(--ha-card-background);\n  border: var(--ha-card-border-width) solid var(--divider-color);\n  padding: 10px;\n}"
                  },
                  "card": {
                    "type": "custom:auto-entities",
                    "card": {
                      "type": "vertical-stack"
                    },
                    "card_param": "cards",
                    "filter": {
                      "template": "{{ state_attr('sensor.electricity_cost_breakdown_dashboard_card', 'template') }}"
                    }
                  }
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "glance",
                      "title": "Daily averages",
                      "entities": [
                        {
                          "entity": "sensor.average_daily_solar_production",
                          "name": "Produced"
                        },
                        {
                          "entity": "sensor.average_daily_energy_export",
                          "name": "Exported"
                        },
                        {
                          "entity": "sensor.average_daily_solar_storage",
                          "name": "Solar stored"
                        },
                        {
                          "entity": "sensor.average_daily_grid_storage",
                          "name": "Grid stored"
                        },
                        {
                          "entity": "sensor.average_daily_energy_consumption",
                          "name": "Total used"
                        },
                        {
                          "entity": "sensor.average_daily_solar_consumption",
                          "name": "Solar used"
                        },
                        {
                          "entity": "sensor.average_daily_battery_consumption",
                          "name": "Battery used"
                        },
                        {
                          "entity": "sensor.average_daily_grid_consumption",
                          "name": "Grid used"
                        },
                        {
                          "entity": "sensor.average_daily_total_energy_cost",
                          "name": "Net cost"
                        },
                        {
                          "entity": "sensor.average_daily_total_energy_cost_savings",
                          "name": "Total savings"
                        },
                        {
                          "entity": "sensor.average_daily_grid_cost",
                          "name": "Grid cost"
                        },
                        {
                          "entity": "sensor.average_daily_energy_export_earnings_minus_battery_charging_cost",
                          "name": "Export earnings"
                        }
                      ],
                      "columns": 4,
                      "card_mod": {
                        "style": {
                          ".entity$": {
                            ".": "div:not(.name) {\n  font-size: 12px !important;\n}\nstate-badge {\n  margin: -3px !important;\n  --mdc-icon-size: 30px !important;\n}\n"
                          }
                        }
                      }
                    },
                    {
                      "type": "glance",
                      "title": "Daily maximums",
                      "entities": [
                        {
                          "entity": "sensor.maximum_daily_solar_production",
                          "name": "Produced"
                        },
                        {
                          "entity": "sensor.maximum_daily_energy_export",
                          "name": "Exported"
                        },
                        {
                          "entity": "sensor.maximum_daily_solar_storage",
                          "name": "Solar stored"
                        },
                        {
                          "entity": "sensor.maximum_daily_grid_storage",
                          "name": "Grid stored"
                        },
                        {
                          "entity": "sensor.maximum_daily_energy_consumption",
                          "name": "Total used"
                        },
                        {
                          "entity": "sensor.maximum_daily_solar_consumption",
                          "name": "Solar used"
                        },
                        {
                          "entity": "sensor.maximum_daily_battery_consumption",
                          "name": "Battery used"
                        },
                        {
                          "entity": "sensor.maximum_daily_grid_consumption",
                          "name": "Grid used"
                        },
                        {
                          "entity": "sensor.maximum_daily_total_energy_cost",
                          "name": "Net cost"
                        },
                        {
                          "entity": "sensor.maximum_daily_total_energy_cost_savings",
                          "name": "Total savings"
                        },
                        {
                          "entity": "sensor.maximum_daily_grid_cost",
                          "name": "Grid cost"
                        },
                        {
                          "entity": "sensor.maximum_daily_energy_export_earnings_minus_battery_charging_cost",
                          "name": "Export earnings"
                        }
                      ],
                      "columns": 4,
                      "card_mod": {
                        "style": {
                          ".entity$": {
                            ".": "div:not(.name) {\n  font-size: 12px !important;\n}\nstate-badge {\n  margin: -3px !important;\n  --mdc-icon-size: 30px !important;\n}\n"
                          }
                        }
                      }
                    },
                    {
                      "type": "entities",
                      "title": "Electricity pricing now",
                      "entities": [
                        {
                          "entity": "sensor.electricity_general_price",
                          "name": "General grid"
                        },
                        {
                          "entity": "sensor.electricity_controlled_load_price",
                          "name": "Controlled load"
                        },
                        {
                          "entity": "sensor.electricity_feed_in_price",
                          "name": "Export"
                        },
                        {
                          "type": "divider"
                        },
                        {
                          "entity": "input_number.energy_cost_service",
                          "name": "Service"
                        },
                        {
                          "entity": "input_number.energy_cost_subscription",
                          "name": "Subscription"
                        }
                      ]
                    },
                    {
                      "type": "entities",
                      "title": "Return on investment",
                      "entities": [
                        {
                          "entity": "sensor.solar_and_battery_return_on_investment",
                          "name": "Savings (minus install cost)"
                        },
                        {
                          "entity": "sensor.solar_and_battery_years_to_break_even",
                          "name": "Break even in"
                        },
                        {
                          "entity": "sensor.solar_and_battery_years_to_beat_investment",
                          "name": "Beat investment in"
                        }
                      ]
                    },
                    {
                      "type": "markdown",
                      "content": "**Energy costs** are determined by the energy's source (grid, solar and/or battery). The energy used is multiplied by the **grid pricing** shown below, where the proportion of imported (grid) and produced (solar/battery) energy contributes to costs and savings respectively. **Savings** represent how much extra would have needed to be spent if the solar system had never been installed.\n\n- *Yearly, monthly, and weekly* costs/savings are rolling totals, so a change indicates more/less usage than the previous period. As solar was only recently installed, the yearly value will increase until a year has past.\n- *Today’s* costs/savings reset to $0 at midnight.\n- *Real-time* costs/savings are based on current power usage if it would be maintained for an hour.\n\nThe graphs show how costs change over their respective time periods, and are colour coded by <font color=#0066cc>low</font>, <font color=#c1bb3c>moderate</font>, and <font color=#ff4d00>high</font> costs. Likewise, the savings for that time period are also plotted in <font color=darkgreen>green</font>.\n\nGroups are shown in order of highest to lowest weekly cost.\n\n<details><summary><i>Noteworthy groups</i></summary>\n\n- *Total*\nCosts for all devices, reduced by export earnings, but also including fixed daily & monthly electricity provider costs. Savings are from using solar/battery instead of the grid, for all devices - with export earnings added and battery charging costs subtracted. Both total costs and savings can be negative (e.g. negative costs when export earnings are high, negative savings when battery charging costs exceed solar savings).\n\n- *Electricity provider service*\nThe fixed daily service and monthly subscription costs charged by the provider, totalled per timeframe.\n\n- *Battery*\nBattery costs are calculated when charging from the grid, while savings show how much more the charging would have cost if solar charging had instead come from the grid. These values do not consider export earnings.\n- *Water heater, oven & stove, guest suite, garage, all other*\nComponents of this group could not be directly tracked, so the group is derived from total reported usage at the inverter minus all other tracked usage. The water heater can use the controlled load power supply, but is not accurately reflected here or in total costs.\n\n- *Standby*\nTotal estimated costs and savings of all devices in standby. This total is only shown for reference as each component is already included in other groups.\n</details>\n\n**Daily averages** for energy produced, exported, and stored, as well as each variety of consumption are calculated since installation of the relevant component(s). Over time this will account for seasonal  variation. Export earnings have battery charging costs subtracted to give a more realistic value. Similarly, **daily maximums** are the highest ever recorded values across a single day. Some of these values are also used to calculate the **return on investment** (details below).\n\n<details><summary><i>Return on investment</i></summary>\n\nThe **return on investment** section below shows a calculation for the current total amount saved through the use of the solar and battery system, minus install costs. This value will improve over time, and based on these projected savings the time taken to break even is estimated.\n\nIt is also useful to compare projected savings (minus install costs) with likely returns if the funds spent on installing the solar system had instead been invested at 6% per annum.\nIf savings are sufficiently high then eventually they will outweight the likely returns from standard investments (shown in years required to **beat investment in**). If -100 years is shown this indicates that investment always outperforms as compounding accelerates.\n\nNote that these **return on investment** figures ignore the increase in house value the solar and battery system provides, which would likely cover a reasonable proportion of the install costs and justify the installation much earlier.\n</details>\n\nThe **electricity pricing now** section shows the real-time cost per kWh if energy is consumed from the grid (general or controlled load), as well the current price paid for any energy you export. The electricity provider's daily property service and monthly subscription fees should be adjusted manually to reflect actual values.",
                      "card_mod": {
                        "style": {
                          "ha-markdown$": "font {\n  text-shadow: 0.5px 0.5px 0.5px var(--primary-text-color), 0 0 2px var(--rgb-card-background-color), 0 0 5px var(--rgb-card-background-color);\n}\nsummary {\n  background: var(--primary-background-color);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 12px;\n  width: 180px;\n  border-radius: var(--ha-card-border-radius);\n  border: var(--button-border-info);\n}\nsummary, summary i {\n  padding-left: 10px;\n}\nspan {\n  text-shadow: 0px 0px 2px var(--accent-color);\n}"
                        }
                      }
                    }
                  ]
                }
              ],
              "column_span": 2
            }
          ],
          "max_columns": 2,
          "title": "Electricity",
          "icon": "mdi:lightning-bolt",
          "dense_section_placement": true,
          "cards": []
        },
        {
          "title": "Plants",
          "path": "plants",
          "icon": "mdi:grass",
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Plants",
                  "heading_style": "subtitle",
                  "icon": "mdi:grass",
                  "badges": [
                    {
                      "type": "entity",
                      "show_state": true,
                      "show_icon": true,
                      "entity": "sensor.texts",
                      "name": "Guide",
                      "state_content": "name",
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/lovelace/guide"
                      },
                      "icon": "mdi:text-box"
                    }
                  ],
                  "visibility": [
                    {
                      "condition": "screen",
                      "media_query": "(min-width: 0px) and (max-width: 767px)"
                    }
                  ]
                },
                {
                  "type": "heading",
                  "heading": "Plants",
                  "heading_style": "subtitle",
                  "icon": "mdi:grass",
                  "visibility": [
                    {
                      "condition": "screen",
                      "media_query": "(min-width: 768px)"
                    }
                  ]
                },
                {
                  "type": "tile",
                  "entity": "sensor.plants_last_watered",
                  "features_position": "bottom",
                  "grid_options": {
                    "columns": 12,
                    "rows": 1
                  },
                  "vertical": false,
                  "icon": "mdi:watering-can"
                },
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "glance",
                    "title": "Soil",
                    "state_color": false,
                    "columns": 4,
                    "card_mod": {
                      "style": {
                        ".entity$": {
                          ".": "div:not(.name) {\n  font-size: 12px !important;\n}\nstate-badge {\n  margin: -3px !important;\n  --mdc-icon-size: 30px !important;\n}\n",
                          "state-badge$": "ha-state-icon[data-state=off] {\n  color: color-mix(in srgb, var(--color-mix-in-base), red) !important;\n} ha-state-icon[data-state=on] {\n  color: color-mix(in srgb, var(--color-mix-in-base), blue) !important;\n}\n"
                        }
                      }
                    }
                  },
                  "entities": [
                    {
                      "entity": "binary_sensor.soil_moist_entryway",
                      "name": "Entryway",
                      "icon": "mdi:door"
                    },
                    {
                      "entity": "binary_sensor.soil_moist_guest_suite",
                      "name": "Guest suite",
                      "icon": "mdi:washing-machine"
                    },
                    {
                      "entity": "binary_sensor.soil_moist_stairway",
                      "name": "Stairway",
                      "icon": "mdi:stairs"
                    },
                    {
                      "entity": "binary_sensor.soil_moist_back_deck",
                      "name": "Back deck",
                      "icon": "mdi:grill"
                    },
                    {
                      "entity": "binary_sensor.soil_moist_living_room",
                      "name": "Living room",
                      "icon": "mdi:sofa"
                    },
                    {
                      "entity": "binary_sensor.soil_moist_dining_room",
                      "name": "Dining room",
                      "icon": "mdi:table-chair"
                    },
                    {
                      "entity": "binary_sensor.soil_moist_bathroom",
                      "name": "Bathroom",
                      "icon": "mdi:shower-head"
                    },
                    {
                      "entity": "binary_sensor.soil_moist_office",
                      "name": "Office",
                      "icon": "mdi:desktop-classic"
                    }
                  ],
                  "sort": {
                    "method": "state"
                  },
                  "filter": null
                },
                {
                  "type": "markdown",
                  "content": "A selection of (mostly) indoor plants that require manual watering are monitored with soil moisture sensors. These sensors give an indication of when different areas of the house or types of plants become dry.\n\nPlants are reported as dry if their moisture level measures below 25%.\n\nThe soil moisture sensors seem to provide quite a range of values depending on their position and the soil type. They have been calibrated, but if you notice the following please report to Dan so he can recalibrate:\n- a plant sensor is reporting dry when in fact the soil still feels moist\n- a plant sensor is reporting high moisture when in fact the soil feels dry"
                },
                {
                  "type": "history-graph",
                  "title": "Soil moisture history",
                  "hours_to_show": 240,
                  "refresh_interval": 0,
                  "entities": [
                    {
                      "entity": "sensor.soil_moisture_entryway",
                      "name": "Entryway"
                    },
                    {
                      "entity": "sensor.soil_moisture_guest_suite",
                      "name": "Guest suite"
                    },
                    {
                      "entity": "sensor.soil_moisture_stairway",
                      "name": "Stairway"
                    },
                    {
                      "entity": "sensor.soil_moisture_back_deck",
                      "name": "Back deck"
                    },
                    {
                      "entity": "sensor.soil_moisture_living_room",
                      "name": "Living room"
                    },
                    {
                      "entity": "sensor.soil_moisture_dining_room",
                      "name": "Dining room"
                    },
                    {
                      "entity": "sensor.soil_moisture_bathroom",
                      "name": "Bathroom"
                    },
                    {
                      "entity": "sensor.soil_moisture_office",
                      "name": "Office"
                    }
                  ]
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Garden",
                  "heading_style": "subtitle",
                  "icon": "mdi:sprout"
                },
                {
                  "type": "tile",
                  "entity": "sensor.last_rained",
                  "grid_options": {
                    "columns": 12,
                    "rows": 1
                  }
                },
                {
                  "type": "entities",
                  "title": "Watering",
                  "show_header_toggle": false,
                  "entities": [
                    {
                      "type": "custom:template-entity-row",
                      "entity": "switch.front_and_back_side_water",
                      "name": "Front & back side",
                      "icon": "mdi:grass",
                      "secondary": "{% from 'plants.jinja' import next_water %}{{ next_water('front_and_back_side') }}",
                      "toggle": true
                    },
                    {
                      "type": "custom:template-entity-row",
                      "entity": "switch.ferns_water",
                      "name": "Ferns",
                      "icon": "mdi:palm-tree",
                      "secondary": "{% from 'plants.jinja' import next_water %}{{ next_water('ferns') }}",
                      "toggle": true
                    },
                    {
                      "type": "custom:template-entity-row",
                      "entity": "switch.back_fence_water",
                      "name": "Back fence",
                      "icon": "mdi:fence",
                      "secondary": "{% from 'plants.jinja' import next_water %}{{ next_water('back_fence') }}",
                      "toggle": true
                    },
                    {
                      "type": "custom:template-entity-row",
                      "entity": "switch.vegetable_garden_water",
                      "name": "Vegetable garden",
                      "icon": "mdi:sprout",
                      "secondary": "{% from 'plants.jinja' import next_water %}{{ next_water('vegetable_garden') }}",
                      "toggle": true
                    },
                    {
                      "type": "custom:template-entity-row",
                      "entity": "switch.lawn_water",
                      "name": "Lawn",
                      "icon": "mdi:wave",
                      "secondary": "{% from 'plants.jinja' import next_water %}{{ next_water('lawn') }}",
                      "toggle": true
                    }
                  ]
                },
                {
                  "type": "markdown",
                  "content": "These garden areas are watered automatically based on prior, current, and forecast weather conditions, as well as watering history, soil, and plant type.\n\nIn addition, you can manually water garden sections with the switches above if you think it is necessary. Each manual watering session lasts for ≈10 minutes. It's best not to water more than one section at a time as this reduces the water pressure and not all plants will get watered properly. You can also toggle automatic watering and rain delays below. Rain delays will delay automatic watering for at least one day.\n\nTo ensure adequate watering without wastage, it is recommended to periodically check the following:\n\n- move the lawn sprinkler to cover drier parts of the lawn\n- the plants look healthy and their soil feels sufficiently moist in each section\n- the taps leading to the automatic watering controllers are fully on\n- there are no leaks at the taps or connections to the watering controllers"
                },
                {
                  "type": "entities",
                  "title": "Automatic watering",
                  "show_header_toggle": false,
                  "entities": [
                    {
                      "entity": "switch.side_tap_smart_watering_program",
                      "name": "Side tap",
                      "icon": "mdi:water-pump"
                    },
                    {
                      "entity": "switch.back_tap_smart_watering_program",
                      "name": "Back tap",
                      "icon": "mdi:water-pump"
                    }
                  ],
                  "layout_options": {
                    "grid_columns": 2,
                    "grid_rows": "auto"
                  }
                },
                {
                  "type": "entities",
                  "title": "Rain delay",
                  "show_header_toggle": false,
                  "entities": [
                    {
                      "entity": "switch.side_tap_rain_delay",
                      "name": "Side tap",
                      "icon": "mdi:weather-rainy"
                    },
                    {
                      "entity": "switch.back_tap_rain_delay",
                      "name": "Back tap",
                      "icon": "mdi:weather-rainy"
                    }
                  ],
                  "layout_options": {
                    "grid_columns": 2,
                    "grid_rows": "auto"
                  }
                },
                {
                  "type": "history-graph",
                  "title": "Days since watered history",
                  "hours_to_show": 240,
                  "refresh_interval": 0,
                  "entities": [
                    {
                      "entity": "sensor.front_and_back_side_days_since_watered",
                      "name": "Front & back side"
                    },
                    {
                      "entity": "sensor.ferns_days_since_watered",
                      "name": "Ferns"
                    },
                    {
                      "entity": "sensor.back_fence_days_since_watered",
                      "name": "Back fence"
                    },
                    {
                      "entity": "sensor.vegetable_garden_days_since_watered",
                      "name": "Vegetable garden"
                    },
                    {
                      "entity": "sensor.lawn_days_since_watered",
                      "name": "Lawn"
                    }
                  ]
                }
              ]
            }
          ],
          "max_columns": 4,
          "cards": []
        },
        {
          "title": "Guide",
          "path": "guide",
          "icon": "",
          "cards": [],
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "heading",
                  "heading": "Guide",
                  "heading_style": "subtitle",
                  "icon": "mdi:text-box"
                },
                {
                  "type": "markdown",
                  "content": "This Home Assistant system is designed to operate as autonomously as possible, so you hopefully don't need to use manual controls very often.\n\nCurrently, the main functionality/devices that require manual control are:\n- nap mode (for day naps in the bedroom or nursery)*\n- Sleep scene (for when everyone is in bed)*\n- back deck light\n- bathroom vent fan\n- toilet light/vent fan\n- downstairs lights & aircon (except the entryway lights)\n\n\\* Use the **smart buttons**, **app**, or **voice control** to change the scene and set napping state when required.\n\nFor everything else, the [<ha-icon icon=\"mdi:home-assistant\"></ha-icon>**Main Dashboard**](/lovelace/climate) provides an overview of Home Assistant and some basic controls. You can also find additional details and controls in the [<ha-icon icon=\"mdi:thermometer\"></ha-icon>**Climate**](/lovelace/climate), [<ha-icon icon=\"mdi:lightbulb-variant\"></ha-icon>**Lights**](/lovelace/lights), [<ha-icon icon=\"mdi:cctv\"></ha-icon>**Presence**](/lovelace/presence), [<ha-icon icon=\"mdi:lightning-bolt\"></ha-icon>**Electricity**](/lovelace/electricity), and [<ha-icon icon=\"mdi:grass\"></ha-icon>**Plants**](/lovelace/plants) dashboards (navigate to these with the icons at the top of the screen).\n\n<center><h3>For more information, select a topic:</h3></center>\n<details><summary><i>Automatic control</i></summary>\n\n**Climate** and **lighting** settings are automatically adjusted based on time, room occupancy, temperatures, illuminance, and various other factors. The system will transition between **scenes** throughout the day - these scenes are general categories for desired functionality. Settings for each scene are available in the other dashboards. The system will automatically switch between different scenes. You can also manually select a preferred scene.\n\nEach **scene** has a particular purpose:\n- ***Morning*** is designed to trigger just before anyone wakes up (at the time specified in the Climate and Lights dashboards), providing dim kitchen lighting plus turning on the living room aircon if appropriate. Thus when anyone does get up it is to a comfortable temperature and sufficient lighting.\n- ***Day*** is triggered when ambient bedroom light is sufficient (usually when the blinds are opened). House lighting is minimised in this scene, but the kitchen, office, bedroom, and nursery will still automatically turn on the lights if there is not enough ambient light in that particular room (and its nap mode is off).\n- ***Night*** is triggered when outdoor light levels are low, turning on the main lights in the house. The brightness and colour temperature of all lighting adjusts as the night goes on, getting dimmer and warmer so as to reduce the impact to your circadian rhythm. This scene is usually triggered as the sun sets, but dark clouds, total solar eclipses, or large birds sitting on the weather station can also trigger it.\n- ***Sleep*** turns off all lighting in the house - except for some non-sleeping areas which are still lit only when there is motion. This scene has to be manually triggered with the bedroom button, this app, or voice control.\n- ***TV*** dims the lights for a nice viewing experience, automatically triggered when the TV is playing at Night.\n- ***Bright*** turns all lights on at full brightness - triggered when there is a fire, otherwise has to be manually triggered with the app or living room button.\n- ***Away (Night/Day)*** turns off all lights (except dining room lights at night for security purposes) and disables climate control unless the pets are detected alone at home. Also ensures the house is locked and security cameras are all monitoring. This scene is automatically triggered when both of us have left the house.\n\nThe bedroom and nursery can each be set to **nap mode** using the corresponding room's **smart button**, the **app**, or **voice control**. During **nap mode** the room's light will not turn on automatically, and climate devices don't turn off when motion isn't detected. This ensures nice conditions are maintained in the room while napping/sleeping.\n\n</details>\n<details><summary><i>Manual control</i></summary>\n\nYou can manually control devices with their physical remotes/switches/buttons, or through this app.\nControls are provided for **lights**, **aircon**, **fans**, **heaters**, **humidifiers**, **door locks**, and the **garden watering system**. \n\nAutomatic controls should provide almost all the functionality you need, but manual control is of course useful when required.\n\nIf you manually adjust a device the system may disable subsequent automatic control if there is a logic conflict. If this happens you will get a notification. You can manually re-enable automatic control in this app, or disable control if you want to ensure the current device state is maintained.\n \n</details>\n<details><summary><i>Smart buttons</i></summary>\n\nThe **buttons** in the nursery and bedroom do the following:\n- *single press*: turn **nap mode on** for the room\n  - for the bedroom button, if nap mode already on and it is the Night scene, single press transitions to **Sleep** scene\n- *double press*: turn **nap mode off**, and the light on\n- *long press*: if no climate device (**aircon**, **heater**, **fan**, or **humidifier**) is on in the room, they will turn on with appropriate settings for current conditions; otherwise all will turn off\n\nThe living room **button** does the following:\n- *single press*: sets all devices to automatic control and resets the scene appropriately\n- *double press*: toggles the ***Bright*** scene\n- *long press*: if the dining and living room **aircon** are both off, they will turn on with appropriate settings for current conditions; otherwise both will turn off\n</details>\n\n<details><summary><i>App usage</i></summary>\nSingle pressing on icons or text will show relevant history graphs and/or controls. Anything with an <span>orange border</span> will show something different when pressed - usually a collection of other relevant information.\n\nDouble pressing on icons or text will toggle the entity if applicable. For example, you can toggle the door lock, lights, and climate devices such as aircon, fans, heaters, and humidifiers.\n\nPress and hold on icons or text to toggle automatic control for lights and climate devices. A device that is currently being controlled automatically will have a <span>green border</span>.\n</details>\n\n<details><summary><i>Voice control</i></summary>\n\nIn order to use Siri, you will need to add the following Siri shortcuts to your device: [Sleep Time](https://www.icloud.com/shortcuts/1c19b6e78b3c492d867cb63305bbfaa9), [Lights On Bright](https://www.icloud.com/shortcuts/d4bf116ae08c4d8a8290827f5c126010), [Lights On](https://www.icloud.com/shortcuts/7cb15602d0974ce1a897f422901acafd), [Lights Off](https://www.icloud.com/shortcuts/e424f0052a014954a71452d01a122167), [Aircon On](https://www.icloud.com/shortcuts/dab4081c117e4b8c8c0f3f5bff5b9a34), [Aircon Off](https://www.icloud.com/shortcuts/87e1dda3345f41f391c3030d09621655), [Enable Climate Control](https://www.icloud.com/shortcuts/19419fdeecea43b6914a420701fb7b35), [Disable Climate Control](https://www.icloud.com/shortcuts/f322c4c33abd45f5b2dd82281219b706), [Lock The Door](https://www.icloud.com/shortcuts/0e14667cabbd436aa2704a7fd31359b1), [Unlock The Door](https://www.icloud.com/shortcuts/27f357e7fdbd4293927259d4d4326b0d), [TV On](https://www.icloud.com/shortcuts/72c845af76b24ff28a965e34a07f7b6f).\n\n, or tell Siri/Google:\n- **\"lights on bright\"** for the *Bright* scene\n- **\"sleep time\"** for the *Sleep* scene\n\nIn order to use Google, you will need to connect your Google Assistant to IFTTT and add applets with webhooks to Home Assistant corresponding to each command.\n\nTODO: CHANGE ABOVE TO LIST OF QUOTES\nTODO: consider inbuilt LLM voice control?\n\n</details>",
                  "layout_options": {
                    "grid_columns": "full"
                  },
                  "card_mod": {
                    "style": {
                      "ha-markdown$": "ha-icon {\n  --mdc-icon-size: 12px;\n  margin: 3px;\n} summary {\n  background: var(--primary-background-color);\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 12px;\n  width: 180px;\n  border-radius: var(--ha-card-border-radius);\n  border: var(--button-border-info);\n}\nsummary, summary i {\n  padding-left: 10px;\n}\nspan {\n  text-shadow: 0px 0px 2px var(--accent-color);\n}\np:nth-of-type(2) span {\n  text-shadow: 0px 0px 2px green;\n}"
                    }
                  }
                }
              ],
              "column_span": 2
            }
          ],
          "max_columns": 4
        }
      ]
    }
  }
}