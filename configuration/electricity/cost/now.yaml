template:
  sensor:
    - name: Grid energy cost per kWh
      state: >
        {{
          states('input_number.energy_cost_green_power')|float +
          states('input_number.energy_cost_' + ('first' if states('sensor.monthly_energy_from_grid')|float < 100 else 'after_first') + '_100kwh_of_month')|float
        }}
      unit_of_measurement: "$/kWh"
      state_class: measurement
      icon: mdi:currency-usd
      availability: >
        {{
          has_value('input_number.energy_cost_green_power') and
          has_value('sensor.monthly_energy_from_grid') and
          has_value('input_number.energy_cost_first_100kwh_of_month') and
          has_value('input_number.energy_cost_after_first_100kwh_of_month')
        }}
    - name: Grid energy cost per Wh
      state: "{{ states('sensor.grid_energy_cost_per_kwh')|float / 1000 }}"
      unit_of_measurement: "$/Wh"
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.grid_energy_cost_per_kwh') }}"

    - name: Savings from solar per kWh
      state: >
        {{
          states('input_number.energy_cost_green_power')|float +
          states('input_number.energy_cost_' + ('first' if states('sensor.monthly_energy_consumed')|float < 100 else 'after_first') + '_100kwh_of_month')|float -
          states('sensor.effective_energy_cost_per_kwh')|float
        }}
      unit_of_measurement: "$/kWh"
      state_class: measurement
      icon: mdi:currency-usd
      availability: >
        {{
          has_value('input_number.energy_cost_green_power') and
          has_value('sensor.monthly_energy_consumed') and
          has_value('input_number.energy_cost_first_100kwh_of_month') and
          has_value('input_number.energy_cost_after_first_100kwh_of_month') and
          has_value('sensor.effective_energy_cost_per_kwh')
        }}
    - name: Savings from solar per Wh
      state: "{{ states('sensor.savings_from_solar_per_kwh')|float / 1000 }}"
      unit_of_measurement: "$/Wh"
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.savings_from_solar_per_kwh') }}"

    - name: Savings from battery per kWh
      state: "{{ 0 }}"
      unit_of_measurement: "$/kWh"
      state_class: measurement
      icon: mdi:currency-usd
      # TODO: update once battery is actually installed
    - name: Savings from battery per Wh
      state: "{{ states('sensor.savings_from_battery_per_kwh')|float / 1000 }}"
      unit_of_measurement: "$/Wh"
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.savings_from_battery_per_kwh') }}"

      # TODO: update once battery is actually installed
    - name: Effective energy cost per kWh
      state: "{{ states('sensor.grid_energy_cost_per_kwh')|float * (1 - states('sensor.power_meter_relative_autonomy')|float / 100) }}"
      unit_of_measurement: "$/kWh"
      state_class: measurement
      icon: mdi:currency-usd
      availability: >
        {{
          has_value('sensor.grid_energy_cost_per_kwh') and
          has_value('sensor.power_meter_relative_autonomy')
        }}
    - name: Effective energy cost per Wh
      state: "{{ states('sensor.effective_energy_cost_per_kwh')|float / 1000 }}"
      unit_of_measurement: "$/Wh"
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.effective_energy_cost_per_kwh') }}"

    - name: Total power cost
      state: "{{ (states('sensor.power_meter_power_load_consumed')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      #TODO: this doesn't take into account controlled load pricing
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.power_meter_power_load_consumed') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Total power cost savings
      state: >
        {{
          (states('sensor.power_meter_power_load_consumed')|float *
          states('sensor.savings_from_solar_per_wh')|float +
          states('sensor.power_meter_power_grid_export')|float *
          states('input_number.energy_export_price')|float / 1000
          )|round(9)
        }}
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: >
        {{
          has_value('sensor.power_meter_power_load_consumed') and
          has_value('sensor.savings_from_solar_per_wh') and
          has_value('sensor.power_meter_power_grid_export') and
          has_value('input_number.energy_export_price')
        }}

    - name: Lights power cost
      state: "{{ (states('sensor.all_light_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_light_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Lights power cost savings
      state: "{{ (states('sensor.all_light_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_light_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Living room aircon power cost
      state: "{{ (states('sensor.living_room_aircon_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.living_room_aircon_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Living room aircon power cost savings
      state: "{{ (states('sensor.living_room_aircon_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.living_room_aircon_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Dining room aircon power cost
      state: "{{ (states('sensor.dining_room_aircon_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.dining_room_aircon_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Dining room aircon power cost savings
      state: "{{ (states('sensor.dining_room_aircon_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.dining_room_aircon_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Bedroom aircon power cost
      state: "{{ (states('sensor.bedroom_aircon_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.bedroom_aircon_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Bedroom aircon power cost savings
      state: "{{ (states('sensor.bedroom_aircon_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.bedroom_aircon_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Office heater power cost
      state: "{{ (states('sensor.office_heater_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.office_heater_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Office heater power cost savings
      state: "{{ (states('sensor.office_heater_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.office_heater_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Nursery heater power cost
      state: "{{ (states('sensor.nursery_heater_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.nursery_heater_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Nursery heater power cost savings
      state: "{{ (states('sensor.nursery_heater_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.nursery_heater_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Fans power cost
      state: "{{ (states('sensor.all_fan_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_fan_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Fans power cost savings
      state: "{{ (states('sensor.all_fan_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_fan_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Humidifiers power cost
      state: "{{ (states('sensor.all_humidifier_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_humidifier_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Humidifiers power cost savings
      state: "{{ (states('sensor.all_humidifier_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_humidifier_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Kitchen appliances power cost
      state: "{{ (states('sensor.kitchen_appliances_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.kitchen_appliances_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Kitchen appliances power cost savings
      state: "{{ (states('sensor.kitchen_appliances_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.kitchen_appliances_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Dishwasher power cost
      state: "{{ (states('sensor.dishwasher_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.dishwasher_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Dishwasher power cost savings
      state: "{{ (states('sensor.dishwasher_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.dishwasher_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Fridge power cost
      state: "{{ (states('sensor.fridge_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.fridge_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Fridge power cost savings
      state: "{{ (states('sensor.fridge_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.fridge_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Freezer, mini fridge, routers power cost
      state: "{{ (states('sensor.freezer_mini_fridge_routers_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.freezer_mini_fridge_routers_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Freezer, mini fridge, routers power cost savings
      state: "{{ (states('sensor.freezer_mini_fridge_routers_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.freezer_mini_fridge_routers_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Washer power cost
      state: "{{ (states('sensor.washer_power')|float * states('sensor.effective_energy_cost_per_kwh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.washer_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Washer power cost savings
      state: "{{ (states('sensor.washer_power')|float * states('sensor.savings_from_solar_per_kwh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.washer_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Dryer power cost
      state: "{{ (states('sensor.dryer_power')|float * states('sensor.effective_energy_cost_per_kwh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.dryer_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Dryer power cost savings
      state: "{{ (states('sensor.dryer_power')|float * states('sensor.savings_from_solar_per_kwh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.dryer_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: TV, speakers, PC, Home Assistant, router relay, security hub power cost
      state: "{{ (states('sensor.tv_speakers_pc_home_assistant_router_relay_security_hub_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.tv_speakers_pc_home_assistant_router_relay_security_hub_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: TV, speakers, PC, Home Assistant, router relay, security hub power cost savings
      state: "{{ (states('sensor.tv_speakers_pc_home_assistant_router_relay_security_hub_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.tv_speakers_pc_home_assistant_router_relay_security_hub_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Water heater, oven & stove, guest suite, garage, all other power cost
      state: "{{ (states('sensor.water_heater_oven_stove_guest_suite_garage_all_other_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.water_heater_oven_stove_guest_suite_garage_all_other_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Water heater, oven & stove, guest suite, garage, all other power cost savings
      # assume water heater usage when solar available, use controlled load costs
      state: >
        {{
          (states('input_number.energy_cost_green_power')|float +
          states('input_number.energy_cost_controlled_load')|float) *
          states('sensor.power_meter_relative_autonomy')|float / 100
        }}
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: >
        {{
          has_value('input_number.energy_cost_green_power') and
          has_value('input_number.energy_cost_controlled_load') and
          has_value('sensor.power_meter_relative_autonomy')
        }}

    - name: Office desk, computer & monitor, cooler, fish tank power cost
      state: "{{ (states('sensor.office_desk_computer_monitor_cooler_fish_tank_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.office_desk_computer_monitor_cooler_fish_tank_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Office desk, computer & monitor, cooler, fish tank power cost savings
      state: "{{ (states('sensor.office_desk_computer_monitor_cooler_fish_tank_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.office_desk_computer_monitor_cooler_fish_tank_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Phone chargers power cost
      state: "{{ (states('sensor.phone_chargers_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.phone_chargers_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Phone chargers power cost savings
      state: "{{ (states('sensor.phone_chargers_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.phone_chargers_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Sensors power cost
      state: "{{ (states('sensor.sensors_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.sensors_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Sensors power cost savings
      state: "{{ (states('sensor.sensors_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.sensors_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Paludarium, picture frame, camera power cost
      state: "{{ (states('sensor.paludarium_picture_frame_camera_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.paludarium_picture_frame_camera_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Paludarium, picture frame, camera power cost savings
      state: "{{ (states('sensor.paludarium_picture_frame_camera_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.paludarium_picture_frame_camera_power') and has_value('sensor.savings_from_solar_per_wh') }}"

    - name: Standby power cost
      state: "{{ (states('sensor.all_standby_power')|float * states('sensor.effective_energy_cost_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_standby_power') and has_value('sensor.effective_energy_cost_per_wh') }}"
    - name: Standby power cost savings
      state: "{{ (states('sensor.all_standby_power')|float * states('sensor.savings_from_solar_per_wh')|float)|round(9) }}"
      unit_of_measurement: $/h
      state_class: measurement
      icon: mdi:currency-usd
      availability: "{{ has_value('sensor.all_standby_power') and has_value('sensor.savings_from_solar_per_wh') }}"
