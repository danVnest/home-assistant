sensor:
  - platform: integration
    name: Solar energy produced
    unique_id: solar_energy_produced
    source: sensor.power_meter_power_photovoltaics
    max_sub_interval:
      minutes: 1
  - platform: integration
    name: Solar energy consumed
    unique_id: solar_energy_consumed
    source: sensor.solar_consumption_power
    max_sub_interval:
      minutes: 1

  - platform: integration
    name: Battery energy charged
    unique_id: battery_energy_charged
    source: sensor.power_meter_power_battery_charge
    max_sub_interval:
      minutes: 1
  - platform: integration
    name: Battery energy solar charged
    unique_id: battery_energy_solar_charged
    source: sensor.battery_solar_charge_power
    max_sub_interval:
      minutes: 1
  - platform: integration
    name: Battery energy grid charged
    unique_id: battery_energy_grid_charged
    source: sensor.battery_grid_charge_power
    max_sub_interval:
      minutes: 1
  - platform: integration
    name: Battery energy discharged
    unique_id: battery_energy_discharged
    source: sensor.power_meter_power_battery_discharge
    max_sub_interval:
      minutes: 1
  - platform: integration
    name: Battery energy consumed
    unique_id: battery_energy_consumed
    source: sensor.battery_consumption_power
    max_sub_interval:
      minutes: 1

template:
  - sensor:
      - name: Total energy consumed
        unique_id: total_energy_consumed
        state: >
          {%- set total_produced_before_battery_install = 8851354 -%}
          {{
            total_produced_before_battery_install +
            states('sensor.solar_energy_produced')|float +
            states('sensor.smart_meter_real_energy_consumed')|float -
            states('sensor.smart_meter_real_energy_produced')|float 
          }}
        unit_of_measurement: Wh
        device_class: energy
        state_class: total_increasing
        icon: mdi:home-lightning-bolt
        availability: >
          {{
            has_value('sensor.solar_energy_produced') and
            has_value('sensor.smart_meter_real_energy_produced') and
            has_value('sensor.smart_meter_real_energy_consumed')
          }}
      - name: Battery time remaining
        unique_id: battery_time_remaining
        state: >
          {%- set battery_reserve = 0.07 -%}
          {%- if states('sensor.battery_state_of_charge')|float == battery_reserve -%}
            0
          {%- else -%}
            {{-
              [(states('sensor.battery_maximum_capacity')|float *
              (1 - battery_reserve) /
              (states('sensor.power_meter_power_battery_discharge')|float + 1))|round(2),
              24]|min
            -}}
          {%- endif -%}
        unit_of_measurement: h
        device_class: duration
        state_class: measurement
        icon: mdi:battery-clock
        availability: >
          {{
            has_value('sensor.battery_state_of_charge') and
            has_value('sensor.battery_maximum_capacity') and
            has_value('sensor.power_meter_power_battery_discharge')
          }}

      - name: Electricity non-renewable percentage
        unique_id: electricity_non_renewable_percentage
        state: "{{ 100 - states('sensor.electricity_renewable_percentage')|float }}"
        unit_of_measurement: "%"
        state_class: measurement
        icon: mdi:leaf-off
        availability: "{{ has_value('sensor.electricity_renewable_percentage') }}"

      - name: Dan's phone charger energy
        unique_id: dan_s_phone_charger_energy
        state: >
          {%- set energy = states('sensor.dan_s_phone_charger_energy')|float(0) -%}
          {%- if states('device_tracker.dan_s_phone') == "home" and has_value('sensor.dan_s_phone_battery_level') -%}
            {%- set current_battery_level = states('sensor.dan_s_phone_battery_level')|float -%}
            {%- set last_battery_level = state_attr('sensor.dan_s_phone_charger_energy', 'last_battery_level')|float(100) -%}
            {%- if current_battery_level > last_battery_level -%}
              {%- set battery_capacity = 0.0167 -%}
              {%- set charging_efficiency = 1.3 -%}
              {%- set energy = energy + charging_efficiency * (current_battery_level - last_battery_level) / 100 * battery_capacity -%}
            {%- endif -%}
          {%- endif -%}
          {{- energy -}}
        unit_of_measurement: kWh
        device_class: energy
        state_class: total_increasing
        icon: mdi:lightning-bolt
        attributes:
          last_battery_level: "{{ states('sensor.dan_s_phone_battery_level')|float(100) }}"

      - name: Washer energy
        unique_id: washer_energy
        state: "{{ states('sensor.washer_energy_without_refresh') }}"
        unit_of_measurement: kWh
        device_class: energy
        state_class: total_increasing
        icon: mdi:lightning-bolt
        attributes:
          refreshed: "{{ now() }}"
        availability: "{{ has_value('sensor.washer_energy_without_refresh') }}"
      - name: Dryer energy
        unique_id: dryer_energy
        state: "{{ states('sensor.dryer_energy_without_refresh') }}"
        unit_of_measurement: kWh
        device_class: energy
        state_class: total_increasing
        icon: mdi:lightning-bolt
        attributes:
          refreshed: "{{ now() }}"
        availability: "{{ has_value('sensor.dryer_energy_without_refresh') }}"

  - triggers:
      - trigger: time
        at: "00:01:00" # 1 minute delay to ensure daily utility meters update first
      - trigger: event
        event_type:
          - homeassistant_started
          - event_template_reloaded
    sensor:
      - name: Days since solar installation
        unique_id: days_since_solar_installation
        state: "{{ ((today_at() - as_datetime('2024-09-05T00+10:00')).total_seconds() / 60 / 60 / 24)|round }}"
        unit_of_measurement: days
        state_class: total_increasing
        icon: mdi:calendar-start
      - name: Days since battery installation
        unique_id: days_since_battery_installation
        state: "{{ ((today_at() - as_datetime('2025-07-15T00+10:00')).total_seconds() / 60 / 60 / 24)|round }}"
        unit_of_measurement: days
        state_class: total_increasing
        icon: mdi:calendar-start

      - name: Average daily solar production
        unique_id: average_daily_solar_production
        state: >
          {%- set total_produced_before_battery_install = 8851354 -%}
          {{
            ((states('sensor.solar_energy_produced')|float + total_produced_before_battery_install) /
            1000 / states('sensor.days_since_solar_installation')|float)|round(1)
          }}
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:solar-power-variant
        availability: "{{ has_value('sensor.solar_energy_produced') and has_value('sensor.days_since_solar_installation') }}"
      - name: Average daily energy export
        unique_id: average_daily_energy_export
        state: >
          {%- set total_export_before_battery_install = 4506078 -%}
          {{
            ((states('sensor.smart_meter_real_energy_produced')|float - total_export_before_battery_install) /
            1000 / states('sensor.days_since_battery_installation')|float)|round(1)
          }}
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:transmission-tower-import
        availability: "{{ has_value('sensor.smart_meter_real_energy_produced') and has_value('sensor.days_since_battery_installation') }}"
      - name: Average daily solar storage
        unique_id: average_daily_solar_storage
        state: "{{ (states('sensor.battery_energy_solar_charged')|float / 1000 / states('sensor.days_since_battery_installation')|float)|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:battery-heart-variant
        availability: "{{ has_value('sensor.battery_energy_charged') and has_value('sensor.days_since_battery_installation') }}"
      - name: Average daily grid storage
        unique_id: average_daily_grid_storage
        state: "{{ (states('sensor.battery_energy_grid_charged')|float / 1000 / states('sensor.days_since_battery_installation')|float)|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:battery-charging
        availability: "{{ has_value('sensor.battery_energy_grid_charged') and has_value('sensor.days_since_battery_installation') }}"
      - name: Average daily energy consumption
        unique_id: average_daily_energy_consumption
        state: "{{ (states('sensor.total_energy_consumed')|float / 1000 / states('sensor.days_since_solar_installation')|float)|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-lightning-bolt
        availability: "{{ has_value('sensor.total_energy_consumed') and has_value('sensor.days_since_solar_installation') }}"
      - name: Average daily solar consumption
        unique_id: average_daily_solar_consumption
        state: "{{ (states('sensor.solar_energy_consumed')|float / 1000 / states('sensor.days_since_battery_installation')|float)|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-sound-in
        availability: "{{ has_value('sensor.solar_energy_consumed') and has_value('sensor.days_since_battery_installation') }}"
      - name: Average daily battery consumption
        unique_id: average_daily_battery_consumption
        state: "{{ (states('sensor.battery_energy_consumed')|float / 1000 / states('sensor.days_since_battery_installation')|float)|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-battery
        availability: "{{ has_value('sensor.battery_energy_consumed') and has_value('sensor.days_since_battery_installation') }}"
      - name: Average daily grid consumption
        unique_id: average_daily_grid_consumption
        state: >
          {%- set total_grid_consumed_before_battery_install = 3113933 -%}
          {{
            ((states('sensor.smart_meter_real_energy_consumed')|float - total_grid_consumed_before_battery_install) /
            1000 / states('sensor.days_since_battery_installation')|float)|round(1)
          }}
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-import-outline
        availability: "{{ has_value('sensor.smart_meter_real_energy_consumed') and has_value('sensor.days_since_battery_installation') }}"

      - name: Maximum daily solar production
        unique_id: maximum_daily_solar_production
        state: "{{ [state_attr('sensor.solar_production_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:solar-power-variant
      - name: Maximum daily energy export
        unique_id: maximum_daily_energy_export
        state: "{{ [state_attr('sensor.energy_export_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:transmission-tower-import
      - name: Maximum daily solar storage
        unique_id: maximum_daily_solar_storage
        state: "{{ [state_attr('sensor.solar_storage_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:battery-heart-variant
      - name: Maximum daily grid storage
        unique_id: maximum_daily_grid_storage
        state: "{{ [state_attr('sensor.grid_storage_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:battery-charging
      - name: Maximum daily energy consumption
        unique_id: maximum_daily_energy_consumption
        state: "{{ [state_attr('sensor.energy_consumption_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-lightning-bolt
      - name: Maximum daily solar consumption
        unique_id: maximum_daily_solar_consumption
        state: "{{ [state_attr('sensor.solar_consumption_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-sound-in
      - name: Maximum daily battery consumption
        unique_id: maximum_daily_battery_consumption
        state: "{{ [state_attr('sensor.battery_consumption_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-battery
      - name: Maximum daily grid consumption
        unique_id: maximum_daily_grid_consumption
        state: "{{ [state_attr('sensor.grid_consumption_today', 'last_period')|float(0)/1000, this.state|float(0)]|max|round(1) }}"
        unit_of_measurement: kWh/day
        state_class: total
        icon: mdi:home-import-outline

utility_meter:
  solar_production_today:
    name: Solar production today
    unique_id: solar_production_today
    source: sensor.solar_energy_produced
    cycle: daily
  energy_export_today:
    name: Energy export today
    unique_id: energy_export_today
    source: sensor.smart_meter_real_energy_produced
    cycle: daily
  solar_storage_today:
    name: Solar storage today
    unique_id: solar_storage_today
    source: sensor.battery_energy_solar_charged
    cycle: daily
  grid_storage_today:
    name: Grid storage today
    unique_id: grid_storage_today
    source: sensor.battery_energy_grid_charged
    cycle: daily
  energy_consumption_today:
    name: Energy consumption today
    unique_id: energy_consumption_today
    source: sensor.total_energy_consumed
    cycle: daily
  solar_consumption_today:
    name: Solar consumption today
    unique_id: solar_consumption_today
    source: sensor.solar_energy_consumed
    cycle: daily
  battery_consumption_today:
    name: Battery consumption today
    unique_id: battery_consumption_today
    source: sensor.battery_energy_consumed
    cycle: daily
  grid_consumption_today:
    name: Grid consumption today
    unique_id: grid_consumption_today
    source: sensor.smart_meter_real_energy_consumed
    cycle: daily
