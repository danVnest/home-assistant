# TODO: https://app.asana.com/0/1207020279479204/1205852232324004/f

- platform: bayesian
  name: Bedroom bed occupied
  prior: 0.417 # ≈10 hours per day = 9/24
  observations:
    - platform: state
      entity_id: binary_sensor.bedroom_presence_sensor_distance_in_bed_range
      to_state: "on"
      prob_given_true: 0.8 # chance of sensor detecting in range given the bed is occupied # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.01 # chance of sensor detecting in range given the bed is unoccupied # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.anyone_asleep
      to_state: "on"
      prob_given_true: 0.6 # could also be awake in bed # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.01 # very unlikely that someone is detected asleep given the bed is unoccupied # UPDATE FROM HISTORY_STATS
    # count of bedroom changes in the past X minutes - helps counter false clears?
    # time since last movement detection?
    # TODO: could also/instead check the anyone_asleep probability? Might not be high enough for 'on', but could indicate bed occupied

- platform: bayesian
  name: Rachel asleep # TODO: change bayesian sensor name to Rachel in bed or Rachel asleep in bed? We don't really want to detect sleep if away. Or is this implied?
  prior: 0.292 # 7 hours per night = 7/24
  observations:
    - platform: state
      entity_id: binary_sensor.bedroom_bed_occupied
      to_state: "on"
      prob_given_true: 0.95 # likely the bedroom bed is detected as occupied given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.3 # chance bedroom is occupied given Rachel is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: light.bedroom
      to_state: "off"
      prob_given_true: 0.99 # very likely the light is off given Rachel is asleep # UPDATE FROM HISTORY_STATS - bedroom light is almost never on when Rachel is asleep
      prob_given_false: 0.6 # chance light is off given Rachel is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.rachel_s_phone_still
      to_state: "on"
      prob_given_true: 0.99 # very likely Rachel's phone is still given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.5 # chance Rachel's phone is still given Rachel is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.rachel_s_phone_sleep_confidence_high
      to_state: "on"
      prob_given_true: 0.95 # likely Rachel's phone will be confident Rachel is asleep given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.3 # Rachel sometimes leaves her phone around and it becomes confident she's asleep when she's awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.rachel_s_sleep_time
      to_state: "on"
      prob_given_true: 0.7 # chance it is within typical sleeping hours given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.3 # chance it is within typical sleeping hours given Rachel is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: input_select.scene
      prob_given_true: 0.95 # likely scene is Sleep given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.2 # chance scene is Sleep given Rachel is awake # UPDATE FROM HISTORY_STATS
      to_state: "Sleep"
    - platform: state
      entity_id: input_select.scene
      prob_given_true: 0.25 # chance scene is Morning given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.2 # chance scene is Morning given Rachel is awake # UPDATE FROM HISTORY_STATS
      to_state: "Morning"
      # TODO: do we need mirrored sensor states for non binary sensors? how to capture all other scenes?
    - platform: state
      entity_id: person.rachel
      to_state: "home" # TODO: change bayesian sensor name to Rachel in bed or Rachel asleep in bed? We don't really want to detect sleep if away
      prob_given_true: 0.99 # very likely Rachel is home given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.7 # chance Rachel is home given Rachel is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.dan_asleep
      to_state: "on"
      prob_given_true: 0.7 # chance Dan is asleep given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.1 # chance Dan is asleep given Rachel is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: sensor.rachel_tired # perhaps rename to rachel_sleep_needs_met
      to_state: "on"
      prob_given_true: 0.2 # chance Rachel is tired given Rachel is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.7 # chance Rachel is tired given Rachel is awake # UPDATE FROM HISTORY_STATS
    # time of night - split into groups, e.g. 9-10pm, 10-11pm, 12-6am, 6-7am, 7-8am, 9-10am
    # sleep or morning scene?
    # activity in rest of house (especially nursery)
    # light status?
    # room illuminance?
    # has Rachel slept at all yet? more likely to be asleep if she was previously

- platform: bayesian
  name: Dan asleep # TODO: change bayesian sensor name to Dan asleep in bed? We don't really want to detect sleep if away
  prior: 0.292 # 7 hours per night = 7/24
  observations:
    - platform: state
      entity_id: binary_sensor.bedroom_bed_occupied
      to_state: "on"
      prob_given_true: 0.95 # likely the bedroom bed is detected as occupied given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.3 # chance bedroom is occupied given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: light.bedroom
      to_state: "off"
      prob_given_true: 0.99 # very likely the light is off given Dan is asleep # UPDATE FROM HISTORY_STATS - bedroom light is almost never on when Rachel is asleep
      prob_given_false: 0.6 # chance light is off given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: sensor.dan_s_phone_still
      to_state: "on"
      prob_given_true: 0.99 # very likely Dan's phone is still given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.5 # chance Dan's phone is still given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.dan_s_phone_unplugged
      to_state: "off"
      prob_given_true: 0.95 # likely Dan's phone is plugged in given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.1 # unlikely Dan's phone is plugged in given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.dan_s_computer_active
      to_state: "off"
      prob_given_true: 0.95 # likely Dan's computer isn't active given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.5 # chance Dan's computer isn't active given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.dan_s_sleep_time
      to_state: "on"
      prob_given_true: 0.7 # chance it is within typical sleeping hours given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.3 # chance it is within typical sleeping hours given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: input_select.scene
      prob_given_true: 0.95 # likely scene is Sleep given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.3 # chance scene is Sleep given Dan is awake # UPDATE FROM HISTORY_STATS
      to_state: "Sleep"
    - platform: state
      entity_id: input_select.scene
      prob_given_true: 0.25 # chance scene is Morning given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.2 # chance scene is Morning given Dan is awake # UPDATE FROM HISTORY_STATS
      to_state: "Morning"
      # TODO: do we need mirrored sensor states for non binary sensors? how to capture all other scenes?
    - platform: state
      entity_id: person.dan
      to_state: "home"
      prob_given_true: 0.99 # very likely Dan is home given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.8 # chance Dan is home given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: binary_sensor.rachel_asleep
      to_state: "on"
      prob_given_true: 0.8 # chance Rachel is asleep given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.25 # chance Rachel is asleep given Dan is awake # UPDATE FROM HISTORY_STATS
    - platform: state
      entity_id: sensor.dan_tired # perhaps rename to dan_sleep_needs_met
      to_state: "on"
      prob_given_true: 0.2 # chance Dan is tired given Dan is asleep # UPDATE FROM HISTORY_STATS
      prob_given_false: 0.7 # chance Dan is tired given Dan is awake # UPDATE FROM HISTORY_STATS
#     # time of day/night?
#     # time since previous nap?
#     # light status?
#     # room illuminance?
# PC IN USE? TV ON?

# - platform: bayesian
#   name: Nursery cot occupied
#   prior: 0.29 # ≈2 hours during day, ≈5 hours at night = 7/24
#   observations:
#     - platform: state
#       entity_id: binary_sensor.nursery_presence_sensor_occupancy
#       prob_given_true: 0.95 # expected error
#       prob_given_false: 0.2 # sometimes doesn't detect stationary person
#       to_state: on
#     # nursery distance?
#     # time since last movement detection? (adjust in sensor instead?)
#     # time of day/night?
#     # time since previous nap?
#     # light status?
#     # room illuminance?

# # the following are guesses - go check history and quantify - use statistics???
# - platform: bayesian
#   name: Nursery occupied
#   prior: 0.29 # ≈2 hours during day, ≈5 hours at night = 7/24
#   observations:
#     - platform: state
#       entity_id: binary_sensor.nursery_cot_occupied
#       prob_given_true: 0.95 # expected error
#       prob_given_false: 0.2 # asleep ≈20% of the time
#       to_state: on
#     - platform: state
#       entity_id: binary_sensor.nursery_presence_sensor_occupancy
#       prob_given_true: 0.95 # expected error
#       prob_given_false: 0.2 # sometimes doesn't detect stationary person
#       to_state: on

#     - platform: state
#       entity_id: sensor.nursery_presence_sensor_occupancy_status
#       prob_given_true: 0.95 #
#       prob_given_false: 0.5 # ≈50% of occupancy is stationary
#       to_state: Movement # THIS ISN'T RIGHT

#     - platform: "state"
#       entity_id: "sensor.bedroom_motion"
#       prob_given_true: 0.5 # My sensor history shows when I am in bed the sensor picks me up about half the time
#       prob_given_false: 0.1 # My sensor history shows I spend about 10% of my waking hours in my bedroom
#       to_state: "on"
#     - platform: "state"
#       entity_id: "sun.sun"
#       prob_given_true: 0.7 # If I am in bed then there is a good chance the sun will be down, but in the summer mornings I may still be in bed
#       prob_given_false: 0.45 # If I am am awake then there is a reasonable chance the sun will be below the horizon - especially in winter
#       to_state: "below_horizon"
#     - platform: "state"
#       entity_id: "sensor.android_charger_type"
#       prob_given_true: 0.95 # When I am in bed, I nearly always plug my phone in to charge
#       prob_given_false: 0.1 # When I am awake, I occasionally AC charge my phone
#       to_state: "ac"
