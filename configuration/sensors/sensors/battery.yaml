- name: Soil sensor vegetable garden sun battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_vegetable_garden_sun')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_vegetable_garden_sun') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
- name: Soil sensor vegetable garden shade battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_vegetable_garden_shade')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_vegetable_garden_shade') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
- name: Soil sensor front deck battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_front_deck')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_front_deck') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
- name: Soil sensor back deck battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_back_deck')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_back_deck') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
- name: Soil sensor carport pots battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_carport_pots')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_carport_pots') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
- name: Soil sensor dining room battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_dining_room')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_dining_room') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
- name: Soil sensor living room battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_living_room')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_living_room') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
- name: Soil sensor office battery level
  state: "{{ max(0, min(100, (100 * (float(states('sensor.soil_battery_voltage_office')) - 1.0) / (1.6 - 1.0)) | round(2))) if has_value('sensor.soil_battery_voltage_office') else 'unavailable' }}"
  unit_of_measurement: "%"
  state_class: measurement
