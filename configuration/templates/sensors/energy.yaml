- name: Energy cost per kWh
  state: >
    {%- set green_cost = states('input_number.energy_cost_green_power') | float -%}
    {%- if states('sensor.monthly_energy_from_grid') | float < 100 -%}
      {{- states('input_number.energy_cost_first_100kwh_of_month') | float + green_cost -}}
    {%- else -%}
      {{- states('input_number.energy_cost_after_first_100kwh_of_month') | float + green_cost -}}
    {%- endif -%}
  unit_of_measurement: "$/kWh"
  state_class: measurement
- name: Energy cost per Wh
  state: "{{ states('sensor.energy_cost_per_kwh') | float / 1000 }}"
  unit_of_measurement: "$/Wh"
  state_class: measurement
- name: Dan's phone charger energy
  state: >
    {%- set energy = states('sensor.dan_s_phone_charger_energy') | float(0) -%}
    {%- if states('device_tracker.dan_s_phone') == "home" and states('sensor.dan_s_phone_battery_state') in ("Charging", "Full") and has_value('sensor.dan_s_phone_battery_level') -%}
      {%- set current_battery_level = states('sensor.dan_s_phone_battery_level') | float -%}
      {%- set last_battery_level = state_attr('sensor.dan_s_phone_charger_energy', 'last_battery_level') | float(current_battery_level) -%}
      {%- if current_battery_level > last_battery_level -%}
        {%- set battery_capacity = 0.167 -%}
        {%- set energy = energy + ((current_battery_level - last_battery_level) / 100 * battery_capacity) -%}
      {%- elif current_battery_level in (80, 100) -%}
        {%- set time_since_last_update = (as_timestamp(now()) - state_attr('sensor.dan_s_phone_charger_energy', 'last_update_time') | float(as_timestamp(now()))) -%}
        {%- if time_since_last_update > 0.1 -%}
          {%- set trickle_charge_power = 0.5 -%}
          {%- set energy = energy + trickle_charge_power * time_since_last_update / 3600 -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
    {{- energy -}}
  unit_of_measurement: kWh
  device_class: energy
  state_class: total_increasing
  attributes:
    last_battery_level: "{{ states('sensor.dan_s_phone_battery_level') | float }}"
    last_update_time: "{{ as_timestamp(now()) }}"
