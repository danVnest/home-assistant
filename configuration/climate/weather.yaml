template:
  - sensor:
      - name: Extreme forecast
        state: >
          {%- set forecasts = (
            states('sensor.outside_apparent_temperature_2h_forecast')|float,
            states('sensor.outside_apparent_temperature_4h_forecast')|float,
            states('sensor.outside_apparent_temperature_6h_forecast')|float,
            states('sensor.outside_apparent_temperature_8h_forecast')|float,
            states('sensor.outside_apparent_temperature_10h_forecast')|float,
          ) -%}
          {%- set max_forecast = forecasts|max -%}
          {%- if max_forecast >= states('input_number.high_temperature_aircon_trigger')|float -%}
            {{- max_forecast -}}
          {%- else -%}
            {%- set min_forecast = forecasts|min -%}
            {%- if min_forecast <= states('input_number.low_temperature_aircon_trigger')|float -%}
              {{- min_forecast -}}
            {%- else -%}
              None
            {%- endif -%}
          {%- endif -%}
        unit_of_measurement: "Â°C"
        device_class: temperature
        state_class: measurement
        icon: mdi:sun-thermometer-outline
        availability: >
          {{ 
            has_value('sensor.outside_apparent_temperature_2h_forecast') and
            has_value('sensor.outside_apparent_temperature_4h_forecast') and
            has_value('sensor.outside_apparent_temperature_6h_forecast') and
            has_value('sensor.outside_apparent_temperature_8h_forecast') and
            has_value('sensor.outside_apparent_temperature_10h_forecast') and
            has_value('input_number.high_temperature_aircon_trigger') and
            has_value('input_number.low_temperature_aircon_trigger')
          }}
