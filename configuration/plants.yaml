template:
  - binary_sensor:
      - name: Plants need watering
        state: >
          {{
            states('input_datetime.plants_last_watered')|as_datetime|as_local < now() - timedelta(days=10) or
            states('sensor.dry_plants')|int > 0
          }}
        icon: mdi:watering-can
        availability: "{{ has_value('input_datetime.plants_last_watered') and has_value('sensor.dry_plants') }}"
  - sensor:
      - name: Dry plants
        state: >
          {%- set sensors = [
             'binary_sensor.soil_moist_entryway',
             'binary_sensor.soil_moist_guest_suite',
             'binary_sensor.soil_moist_stairway',
             'binary_sensor.soil_moist_back_deck',
             'binary_sensor.soil_moist_living_room',
             'binary_sensor.soil_moist_dining_room',
             'binary_sensor.soil_moist_bathroom',
             'binary_sensor.soil_moist_office'
           ] -%}
           {{- (100 * sensors|select('is_state', 'off')|list|count / sensors|count)|round -}}
        unit_of_measurement: "%"
        icon: mdi:grass
        availability: >
          {{
            has_value('binary_sensor.soil_moist_entryway') and
            has_value('binary_sensor.soil_moist_guest_suite') and
            has_value('binary_sensor.soil_moist_stairway') and
            has_value('binary_sensor.soil_moist_back_deck') and
            has_value('binary_sensor.soil_moist_living_room') and
            has_value('binary_sensor.soil_moist_dining_room') and
            has_value('binary_sensor.soil_moist_bathroom') and
            has_value('binary_sensor.soil_moist_office')
          }}
      - name: Plants last watered
        state: "{{ states('input_datetime.plants_last_watered')|as_datetime|time_since + ' ago'}}"
        icon: mdi:clock
        availability: "{{ has_value('input_datetime.plants_last_watered') }}"

binary_sensor:
  - platform: threshold
    name: Soil moist entryway
    entity_id: sensor.soil_moisture_entryway
    upper: 40
    hysteresis: 10
    device_class: moisture
  - platform: threshold
    name: Soil moist guest suite
    entity_id: sensor.soil_moisture_guest_suite
    upper: 40
    hysteresis: 10
    device_class: moisture
  - platform: threshold
    name: Soil moist stairway
    entity_id: sensor.soil_moisture_stairway
    upper: 40
    hysteresis: 10
    device_class: moisture
  - platform: threshold
    name: Soil moist back deck
    entity_id: sensor.soil_moisture_back_deck
    upper: 40
    hysteresis: 10
    device_class: moisture
  - platform: threshold
    name: Soil moist living room
    entity_id: sensor.soil_moisture_living_room
    upper: 40
    hysteresis: 10
    device_class: moisture
  - platform: threshold
    name: Soil moist dining room
    entity_id: sensor.soil_moisture_dining_room
    upper: 40
    hysteresis: 10
    device_class: moisture
  - platform: threshold
    name: Soil moist bathroom
    entity_id: sensor.soil_moisture_bathroom
    upper: 40
    hysteresis: 10
    device_class: moisture
  - platform: threshold
    name: Soil moist office
    entity_id: sensor.soil_moisture_office
    upper: 40
    hysteresis: 10
    device_class: moisture

input_datetime:
  plants_last_watered:
    name: Plants last watered
    has_date: true
    has_time: true
    icon: mdi:clock

automation:
  - alias: Reset plants last watered
    triggers:
      trigger: state
      entity_id: sensor.dry_plants
    condition:
      condition: template
      value_template: >
        {{
          trigger.to_state.state|int(100) == 0 and
          trigger.from_state.state not in ['unknown', 'unavailable', none]
        }}
    actions:
      - action: input_datetime.set_datetime
        target:
          entity_id: input_datetime.plants_last_watered
        data:
          datetime: "{{ now() }}"
